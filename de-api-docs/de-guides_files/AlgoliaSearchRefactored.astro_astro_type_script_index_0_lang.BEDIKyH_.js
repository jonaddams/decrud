const Oe={hitsPerPage:8,timeout:5e3,debounceMs:300,attributesToRetrieve:["title","section","contents","url","type","category","platform"],attributesToSnippet:["contents:20"],highlighting:{preTag:"<mark class='search-highlight'>",postTag:"</mark>",cssClasses:"search-highlight"}},$e={enabled:!0,maxEntries:50,defaultTTL:5*60*1e3},Le={enabled:!0,selectKey:"Enter",upKey:"ArrowUp",downKey:"ArrowDown",escapeKey:"Escape"},Ge={showMetadata:!0,showCount:!0,showPoweredBy:!0};class He{config={};cacheConfig={};keyboardConfig={};templateConfig={};withCredentials(r,o,l){return this.config.appId=r,this.config.apiKey=o,this.config.indexName=l,this}withSearch(r){return this.config={...this.config,...r},this}withCache(r){return this.cacheConfig={...this.cacheConfig,...r},this}withKeyboard(r){return this.keyboardConfig={...this.keyboardConfig,...r},this}withTemplate(r){return this.templateConfig={...this.templateConfig,...r},this}build(){if(!this.config.appId||!this.config.apiKey||!this.config.indexName)throw new Error("Missing required credentials. Use withCredentials() to set algolia appId, apiKey, and indexName.");return{search:{...Oe,...this.config},cache:{...$e,...this.cacheConfig},keyboard:{...Le,...this.keyboardConfig},template:{...Ge,...this.templateConfig}}}}function je(){return new He}const _e=["mark"],Me={allowedTags:_e,preserveWhitespace:!0};function _(u){if(!u||typeof u!="string")return"";const r=document.createElement("div");return r.textContent=u,r.innerHTML}function z(u,r={}){if(!u||typeof u!="string")return"";const{allowedTags:o,preserveWhitespace:l}={...Me,...r},g=document.createElement("div");g.innerHTML=u;const q=document.createTreeWalker(g,NodeFilter.SHOW_ELEMENT,null),m=[];let s;for(;s=q.nextNode();){const e=s;o.includes(e.tagName.toLowerCase())||m.push(e)}return m.forEach(e=>{const t=l?e.textContent:e.textContent?.trim(),a=document.createTextNode(t||"");e.parentNode?.replaceChild(a,e)}),g.innerHTML}function ce(u){return!u||typeof u!="string"?"":u.replace(/<[^>]*>/g,"").replace(/[<>'"&]/g,"").trim()}const Be={showMetadata:!0,showCount:!0,showPoweredBy:!0};function Ke(u={}){const{showPoweredBy:r}={...Be,...u};return`
    <div class="algolia-empty-container">
      <div class="algolia-empty-content">
        <div class="algolia-empty-inner">
          <svg class="algolia-empty-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
          </svg>
          <p class="algolia-empty-title">No results found</p>
          <p class="algolia-empty-subtitle">Try different keywords or check spelling</p>
        </div>
      </div>
      ${r?we():""}
    </div>
  `}function Fe(u={}){return`
    <div class="algolia-loading-container">
      <div class="algolia-loading-content">
        <div class="algolia-loading-inner">
          <div class="algolia-loading-spinner"></div>
          <p class="algolia-loading-text">Searching...</p>
        </div>
      </div>
    </div>
  `}function ue(u="Search unavailable",r={}){return`
    <div class="algolia-error-container">
      <div class="algolia-error-content">
        <div class="algolia-error-inner">
          <svg class="algolia-error-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 16.5c-.77.833.192 2.5 1.732 2.5z" />
          </svg>
          <p class="algolia-error-message">${_(u)}</p>
          <p class="algolia-error-subtitle">Please try again later</p>
        </div>
      </div>
    </div>
  `}function We(u,r,o,l){return`
    <div class="algolia-result-item">
      <a href="${_(u.url)}" class="algolia-result-link" aria-labelledby="result-title-${r}">
        <div class="algolia-result-content">
          <div class="algolia-result-main">
            <div class="algolia-result-header">
              <h3 id="result-title-${r}" class="algolia-result-title">
                ${z(u._highlightResult?.title?.value||u.title)}
              </h3>
              <div class="algolia-result-pills">
                ${ze(u.type)}
                ${Qe(u.platform)}
              </div>
            </div>
            
            ${Ve(u)}
            
            <div class="algolia-result-snippet">
              ${z(u._snippetResult?.contents?.value||u.contents?.substring(0,150)+"...")}
            </div>
            
            <div class="algolia-result-tags">
              ${Je(u.category)}
              ${Ze()}
            </div>
          </div>
        </div>
      </a>
    </div>
    ${r<l-1,""}
  `}function we(){return`
    <div class="algolia-footer">
      <div class="algolia-powered-by">
        <span>Powered by</span>
        <svg class="algolia-logo" viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect width="48" height="48" rx="8" fill="white"/>
          <path d="M9.83333 26.8471C8.26792 26.8471 7 25.5729 7 23.9998C7 22.4266 8.26792 21.1524 9.83333 21.1524C11.3987 21.1524 12.6667 22.4266 12.6667 23.9998C12.6667 25.5729 11.3987 26.8471 9.83333 26.8471ZM38.1667 21.1524C36.6012 21.1524 35.3333 22.4266 35.3333 23.9998C35.3333 25.5729 36.6012 26.8471 38.1667 26.8471C39.7321 26.8471 41 25.5729 41 23.9998C41 22.4266 39.7321 21.1524 38.1667 21.1524ZM11.3265 30.9701C10.128 31.9809 9.97075 33.7776 10.9766 34.982C11.9824 36.1865 13.7702 36.3445 14.9688 35.3337C16.1672 34.3229 16.3245 32.5262 15.3187 31.3217C14.3128 30.1173 12.525 29.9593 11.3265 30.9701ZM36.6735 17.0294C37.872 16.0186 38.0292 14.2219 37.0234 13.0175C36.0176 11.8131 34.2297 11.6551 33.0312 12.6659C31.8328 13.6767 31.6755 15.4734 32.6813 16.6778C33.6872 17.8822 35.475 18.0402 36.6735 17.0294ZM14.9688 12.6673C13.7702 11.6565 11.9824 11.8131 10.9766 13.0189C9.97075 14.2248 10.1266 16.02 11.3265 17.0309C12.5264 18.0417 14.3128 17.8851 15.3187 16.6792C16.3245 15.4734 16.1687 13.6781 14.9688 12.6673ZM36.6735 30.9701C35.475 29.9593 33.6872 30.1159 32.6813 31.3217C31.6755 32.5262 31.8313 34.3229 33.0312 35.3337C34.2297 36.3445 36.0176 36.1879 37.0234 34.982C38.0292 33.7776 37.8734 31.9809 36.6735 30.9701ZM29.4386 24.8682C28.2401 23.8574 26.4523 24.014 25.4464 25.2199C24.4406 26.4257 24.5964 28.221 25.7963 29.2318C26.9962 30.2426 28.7827 30.086 29.7885 28.8801C30.7943 27.6743 30.6385 25.879 29.4386 24.8682ZM22.2037 18.7677C21.0052 17.7569 19.2173 17.9135 18.2115 19.1194C17.2057 20.3253 17.3615 22.1205 18.5614 23.1313C19.7613 24.1421 21.5478 23.9855 22.5536 22.7797C23.5594 21.5738 23.4036 19.7786 22.2037 18.7677Z" fill="#1A1414"/>
        </svg>
      </div>
    </div>
  `}function ze(u){return u?`
    <div class="algolia-result-type">
      <span class="algolia-result-type-badge">
        ${_(u)}
      </span>
    </div>
  `:""}function Qe(u){if(!u||u.length===0)return"";const r=u[0];return`
    <div class="algolia-result-platform">
      <span class="algolia-result-platform-badge">
        ${_(r)}
      </span>
    </div>
  `}function Ve(u){return u.section?`
    <div class="algolia-result-section">
      ${z(u._highlightResult?.section?.value||u.section)}
    </div>
  `:""}function Je(u){return u?`
    <span class="algolia-result-category">
      ${_(u)}
    </span>
  `:""}function Ze(){return`
    <span class="algolia-result-action">
      <svg xmlns="http://www.w3.org/2000/svg" class="algolia-result-action-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
      </svg>
      View
    </span>
  `}function R(){function u(r){return new Promise(o=>{let l=new XMLHttpRequest;l.open(r.method,r.url,!0),Object.keys(r.headers).forEach(s=>l.setRequestHeader(s,r.headers[s]));let g=(s,e)=>setTimeout(()=>{l.abort(),o({status:0,content:e,isTimedOut:!0})},s),q=g(r.connectTimeout,"Connection timeout"),m;l.onreadystatechange=()=>{l.readyState>l.OPENED&&m===void 0&&(clearTimeout(q),m=g(r.responseTimeout,"Socket timeout"))},l.onerror=()=>{l.status===0&&(clearTimeout(q),clearTimeout(m),o({content:l.responseText||"Network request failed",status:l.status,isTimedOut:!1}))},l.onload=()=>{clearTimeout(q),clearTimeout(m),o({content:l.responseText,status:l.status,isTimedOut:!1})},l.send(r.data)})}return{send:u}}function x(u){let r;const o=`algolia-client-js-${u.key}`;function l(){return r===void 0&&(r=u.localStorage||window.localStorage),r}function g(){return JSON.parse(l().getItem(o)||"{}")}function q(s){l().setItem(o,JSON.stringify(s))}function m(){const s=u.timeToLive?u.timeToLive*1e3:null,e=g(),t=Object.fromEntries(Object.entries(e).filter(([,n])=>n.timestamp!==void 0));if(q(t),!s)return;const a=Object.fromEntries(Object.entries(t).filter(([,n])=>{const c=new Date().getTime();return!(n.timestamp+s<c)}));q(a)}return{get(s,e,t={miss:()=>Promise.resolve()}){return Promise.resolve().then(()=>(m(),g()[JSON.stringify(s)])).then(a=>Promise.all([a?a.value:e(),a!==void 0])).then(([a,n])=>Promise.all([a,n||t.miss(a)])).then(([a])=>a)},set(s,e){return Promise.resolve().then(()=>{const t=g();return t[JSON.stringify(s)]={timestamp:new Date().getTime(),value:e},l().setItem(o,JSON.stringify(t)),e})},delete(s){return Promise.resolve().then(()=>{const e=g();delete e[JSON.stringify(s)],l().setItem(o,JSON.stringify(e))})},clear(){return Promise.resolve().then(()=>{l().removeItem(o)})}}}function Ye(){return{get(u,r,o={miss:()=>Promise.resolve()}){return r().then(g=>Promise.all([g,o.miss(g)])).then(([g])=>g)},set(u,r){return Promise.resolve(r)},delete(u){return Promise.resolve()},clear(){return Promise.resolve()}}}function I(u){const r=[...u.caches],o=r.shift();return o===void 0?Ye():{get(l,g,q={miss:()=>Promise.resolve()}){return o.get(l,g,q).catch(()=>I({caches:r}).get(l,g,q))},set(l,g){return o.set(l,g).catch(()=>I({caches:r}).set(l,g))},delete(l){return o.delete(l).catch(()=>I({caches:r}).delete(l))},clear(){return o.clear().catch(()=>I({caches:r}).clear())}}}function S(u={serializable:!0}){let r={};return{get(o,l,g={miss:()=>Promise.resolve()}){const q=JSON.stringify(o);if(q in r)return Promise.resolve(u.serializable?JSON.parse(r[q]):r[q]);const m=l();return m.then(s=>g.miss(s)).then(()=>m)},set(o,l){return r[JSON.stringify(o)]=u.serializable?JSON.stringify(l):l,Promise.resolve(l)},delete(o){return delete r[JSON.stringify(o)],Promise.resolve()},clear(){return r={},Promise.resolve()}}}function Xe(u){const r={value:`Algolia for JavaScript (${u})`,add(o){const l=`; ${o.segment}${o.version!==void 0?` (${o.version})`:""}`;return r.value.indexOf(l)===-1&&(r.value=`${r.value}${l}`),r}};return r}function A(u,r,o="WithinHeaders"){const l={"x-algolia-api-key":r,"x-algolia-application-id":u};return{headers(){return o==="WithinHeaders"?l:{}},queryParameters(){return o==="WithinQueryParameters"?l:{}}}}function G({func:u,validate:r,aggregator:o,error:l,timeout:g=()=>0}){const q=m=>new Promise((s,e)=>{u(m).then(async t=>(o&&await o(t),await r(t)?s(t):l&&await l.validate(t)?e(new Error(await l.message(t))):setTimeout(()=>{q(t).then(s).catch(e)},await g()))).catch(t=>{e(t)})});return q()}function U({algoliaAgents:u,client:r,version:o}){const l=Xe(o).add({segment:r,version:o});return u.forEach(g=>l.add(g)),l}function N(){return{debug(u,r){return Promise.resolve()},info(u,r){return Promise.resolve()},error(u,r){return Promise.resolve()}}}var he=2*60*1e3;function le(u,r="up"){const o=Date.now();function l(){return r==="up"||Date.now()-o>he}function g(){return r==="timed out"&&Date.now()-o<=he}return{...u,status:r,lastUpdate:o,isUp:l,isTimedOut:g}}var ye=class extends Error{name="AlgoliaError";constructor(u,r){super(u),r&&(this.name=r)}},ve=class extends ye{stackTrace;constructor(u,r,o){super(u,o),this.stackTrace=r}},et=class extends ve{constructor(u){super("Unreachable hosts - your application id may be incorrect. If the error persists, please reach out to the Algolia Support team: https://alg.li/support.",u,"RetryError")}},B=class extends ve{status;constructor(u,r,o,l="ApiError"){super(u,o,l),this.status=r}},tt=class extends ye{response;constructor(u,r){super(u,"DeserializationError"),this.response=r}},rt=class extends B{error;constructor(u,r,o,l){super(u,r,l,"DetailedApiError"),this.error=o}};function Ee(u){const r=u;for(let o=u.length-1;o>0;o--){const l=Math.floor(Math.random()*(o+1)),g=u[o];r[o]=u[l],r[l]=g}return r}function st(u,r,o){const l=at(o);let g=`${u.protocol}://${u.url}${u.port?`:${u.port}`:""}/${r.charAt(0)==="/"?r.substring(1):r}`;return l.length&&(g+=`?${l}`),g}function at(u){return Object.keys(u).filter(r=>u[r]!==void 0).sort().map(r=>`${r}=${encodeURIComponent(Object.prototype.toString.call(u[r])==="[object Array]"?u[r].join(","):u[r]).replace(/\+/g,"%20")}`).join("&")}function nt(u,r){if(u.method==="GET"||u.data===void 0&&r.data===void 0)return;const o=Array.isArray(u.data)?u.data:{...u.data,...r.data};return JSON.stringify(o)}function it(u,r,o){const l={Accept:"application/json",...u,...r,...o},g={};return Object.keys(l).forEach(q=>{const m=l[q];g[q.toLowerCase()]=m}),g}function ot(u){try{return JSON.parse(u.content)}catch(r){throw new tt(r.message,u)}}function ct({content:u,status:r},o){try{const l=JSON.parse(u);return"error"in l?new rt(l.message,r,l.error,o):new B(l.message,r,o)}catch{}return new B(u,r,o)}function ut({isTimedOut:u,status:r}){return!u&&~~r===0}function ht({isTimedOut:u,status:r}){return u||ut({isTimedOut:u,status:r})||~~(r/100)!==2&&~~(r/100)!==4}function lt({status:u}){return~~(u/100)===2}function dt(u){return u.map(r=>Se(r))}function Se(u){const r=u.request.headers["x-algolia-api-key"]?{"x-algolia-api-key":"*****"}:{};return{...u,request:{...u.request,headers:{...u.request.headers,...r}}}}function O({hosts:u,hostsCache:r,baseHeaders:o,logger:l,baseQueryParameters:g,algoliaAgent:q,timeouts:m,requester:s,requestsCache:e,responsesCache:t}){async function a(i){const h=await Promise.all(i.map(y=>r.get(y,()=>Promise.resolve(le(y))))),d=h.filter(y=>y.isUp()),f=h.filter(y=>y.isTimedOut()),p=[...d,...f];return{hosts:p.length>0?p:i,getTimeout(y,w){return(f.length===0&&y===0?1:f.length+3+y)*w}}}async function n(i,h,d=!0){const f=[],p=nt(i,h),P=it(o,i.headers,h.headers),y=i.method==="GET"?{...i.data,...h.data}:{},w={...g,...i.queryParameters,...y};if(q.value&&(w["x-algolia-agent"]=q.value),h&&h.queryParameters)for(const T of Object.keys(h.queryParameters))!h.queryParameters[T]||Object.prototype.toString.call(h.queryParameters[T])==="[object Object]"?w[T]=h.queryParameters[T]:w[T]=h.queryParameters[T].toString();let E=0;const b=async(T,K)=>{const j=T.pop();if(j===void 0)throw new et(dt(f));const F={...m,...h.timeouts},ne={data:p,headers:P,method:i.method,url:st(j,i.path,w),connectTimeout:K(E,F.connect),responseTimeout:K(E,d?F.read:F.write)},ie=W=>{const oe={request:ne,response:W,host:j,triesLeft:T.length};return f.push(oe),oe},L=await s.send(ne);if(ht(L)){const W=ie(L);return L.isTimedOut&&E++,l.info("Retryable failure",Se(W)),await r.set(j,le(j,L.isTimedOut?"timed out":"down")),b(T,K)}if(lt(L))return ot(L);throw ie(L),ct(L,f)},$=u.filter(T=>T.accept==="readWrite"||(d?T.accept==="read":T.accept==="write")),H=await a($);return b([...H.hosts].reverse(),H.getTimeout)}function c(i,h={}){const d=i.useReadTransporter||i.method==="GET";if(!d)return n(i,h,d);const f=()=>n(i,h);if((h.cacheable||i.cacheable)!==!0)return f();const P={request:i,requestOptions:h,transporter:{queryParameters:g,headers:o}};return t.get(P,()=>e.get(P,()=>e.set(P,f()).then(y=>Promise.all([e.delete(P),y]),y=>Promise.all([e.delete(P),Promise.reject(y)])).then(([y,w])=>w)),{miss:y=>t.set(P,y)})}return{hostsCache:r,requester:s,timeouts:m,logger:l,algoliaAgent:q,baseHeaders:o,baseQueryParameters:g,hosts:u,request:c,requestsCache:e,responsesCache:t}}var Z="5.34.1",de=["de","us"];function mt(u){return[{url:u?"analytics.{region}.algolia.com".replace("{region}",u):"analytics.algolia.com",accept:"readWrite",protocol:"https"}]}function gt({appId:u,apiKey:r,authMode:o,algoliaAgents:l,region:g,...q}){const m=A(u,r,o),s=O({hosts:mt(g),...q,algoliaAgent:U({algoliaAgents:l,client:"Abtesting",version:Z}),baseHeaders:{"content-type":"text/plain",...m.headers(),...q.baseHeaders},baseQueryParameters:{...m.queryParameters(),...q.baseQueryParameters}});return{transporter:s,appId:u,apiKey:r,clearCache(){return Promise.all([s.requestsCache.clear(),s.responsesCache.clear()]).then(()=>{})},get _ua(){return s.algoliaAgent.value},addAlgoliaAgent(e,t){s.algoliaAgent.add({segment:e,version:t})},setClientApiKey({apiKey:e}){!o||o==="WithinHeaders"?s.baseHeaders["x-algolia-api-key"]=e:s.baseQueryParameters["x-algolia-api-key"]=e},addABTests(e,t){if(!e)throw new Error("Parameter `addABTestsRequest` is required when calling `addABTests`.");if(!e.name)throw new Error("Parameter `addABTestsRequest.name` is required when calling `addABTests`.");if(!e.variants)throw new Error("Parameter `addABTestsRequest.variants` is required when calling `addABTests`.");if(!e.endAt)throw new Error("Parameter `addABTestsRequest.endAt` is required when calling `addABTests`.");const i={method:"POST",path:"/2/abtests",queryParameters:{},headers:{},data:e};return s.request(i,t)},customDelete({path:e,parameters:t},a){if(!e)throw new Error("Parameter `path` is required when calling `customDelete`.");const h={method:"DELETE",path:"/{path}".replace("{path}",e),queryParameters:t||{},headers:{}};return s.request(h,a)},customGet({path:e,parameters:t},a){if(!e)throw new Error("Parameter `path` is required when calling `customGet`.");const h={method:"GET",path:"/{path}".replace("{path}",e),queryParameters:t||{},headers:{}};return s.request(h,a)},customPost({path:e,parameters:t,body:a},n){if(!e)throw new Error("Parameter `path` is required when calling `customPost`.");const d={method:"POST",path:"/{path}".replace("{path}",e),queryParameters:t||{},headers:{},data:a||{}};return s.request(d,n)},customPut({path:e,parameters:t,body:a},n){if(!e)throw new Error("Parameter `path` is required when calling `customPut`.");const d={method:"PUT",path:"/{path}".replace("{path}",e),queryParameters:t||{},headers:{},data:a||{}};return s.request(d,n)},deleteABTest({id:e},t){if(!e)throw new Error("Parameter `id` is required when calling `deleteABTest`.");const i={method:"DELETE",path:"/2/abtests/{id}".replace("{id}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)},estimateABTest(e,t){if(!e)throw new Error("Parameter `estimateABTestRequest` is required when calling `estimateABTest`.");if(!e.configuration)throw new Error("Parameter `estimateABTestRequest.configuration` is required when calling `estimateABTest`.");if(!e.variants)throw new Error("Parameter `estimateABTestRequest.variants` is required when calling `estimateABTest`.");const i={method:"POST",path:"/2/abtests/estimate",queryParameters:{},headers:{},data:e};return s.request(i,t)},getABTest({id:e},t){if(!e)throw new Error("Parameter `id` is required when calling `getABTest`.");const i={method:"GET",path:"/2/abtests/{id}".replace("{id}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)},listABTests({offset:e,limit:t,indexPrefix:a,indexSuffix:n}={},c=void 0){const i="/2/abtests",h={},d={};e!==void 0&&(d.offset=e.toString()),t!==void 0&&(d.limit=t.toString()),a!==void 0&&(d.indexPrefix=a.toString()),n!==void 0&&(d.indexSuffix=n.toString());const f={method:"GET",path:i,queryParameters:d,headers:h};return s.request(f,c)},scheduleABTest(e,t){if(!e)throw new Error("Parameter `scheduleABTestsRequest` is required when calling `scheduleABTest`.");if(!e.name)throw new Error("Parameter `scheduleABTestsRequest.name` is required when calling `scheduleABTest`.");if(!e.variants)throw new Error("Parameter `scheduleABTestsRequest.variants` is required when calling `scheduleABTest`.");if(!e.scheduledAt)throw new Error("Parameter `scheduleABTestsRequest.scheduledAt` is required when calling `scheduleABTest`.");if(!e.endAt)throw new Error("Parameter `scheduleABTestsRequest.endAt` is required when calling `scheduleABTest`.");const i={method:"POST",path:"/2/abtests/schedule",queryParameters:{},headers:{},data:e};return s.request(i,t)},stopABTest({id:e},t){if(!e)throw new Error("Parameter `id` is required when calling `stopABTest`.");const i={method:"POST",path:"/2/abtests/{id}/stop".replace("{id}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)}}}function be(u,r,o,l){if(!u||typeof u!="string")throw new Error("`appId` is missing.");if(!r||typeof r!="string")throw new Error("`apiKey` is missing.");if(o&&(typeof o!="string"||!de.includes(o)))throw new Error(`\`region\` must be one of the following: ${de.join(", ")}`);return gt({appId:u,apiKey:r,region:o,timeouts:{connect:1e3,read:2e3,write:3e4},logger:N(),requester:R(),algoliaAgents:[{segment:"Browser"}],authMode:"WithinQueryParameters",responsesCache:S(),requestsCache:S({serializable:!1}),hostsCache:I({caches:[x({key:`${Z}-${u}`}),S()]}),...l})}const qt=Object.freeze(Object.defineProperty({__proto__:null,abtestingClient:be,apiClientVersion:Z},Symbol.toStringTag,{value:"Module"}));var Y="5.34.1",me=["de","us"];function ft(u){return[{url:u?"analytics.{region}.algolia.com".replace("{region}",u):"analytics.algolia.com",accept:"readWrite",protocol:"https"}]}function pt({appId:u,apiKey:r,authMode:o,algoliaAgents:l,region:g,...q}){const m=A(u,r,o),s=O({hosts:ft(g),...q,algoliaAgent:U({algoliaAgents:l,client:"Analytics",version:Y}),baseHeaders:{"content-type":"text/plain",...m.headers(),...q.baseHeaders},baseQueryParameters:{...m.queryParameters(),...q.baseQueryParameters}});return{transporter:s,appId:u,apiKey:r,clearCache(){return Promise.all([s.requestsCache.clear(),s.responsesCache.clear()]).then(()=>{})},get _ua(){return s.algoliaAgent.value},addAlgoliaAgent(e,t){s.algoliaAgent.add({segment:e,version:t})},setClientApiKey({apiKey:e}){!o||o==="WithinHeaders"?s.baseHeaders["x-algolia-api-key"]=e:s.baseQueryParameters["x-algolia-api-key"]=e},customDelete({path:e,parameters:t},a){if(!e)throw new Error("Parameter `path` is required when calling `customDelete`.");const h={method:"DELETE",path:"/{path}".replace("{path}",e),queryParameters:t||{},headers:{}};return s.request(h,a)},customGet({path:e,parameters:t},a){if(!e)throw new Error("Parameter `path` is required when calling `customGet`.");const h={method:"GET",path:"/{path}".replace("{path}",e),queryParameters:t||{},headers:{}};return s.request(h,a)},customPost({path:e,parameters:t,body:a},n){if(!e)throw new Error("Parameter `path` is required when calling `customPost`.");const d={method:"POST",path:"/{path}".replace("{path}",e),queryParameters:t||{},headers:{},data:a||{}};return s.request(d,n)},customPut({path:e,parameters:t,body:a},n){if(!e)throw new Error("Parameter `path` is required when calling `customPut`.");const d={method:"PUT",path:"/{path}".replace("{path}",e),queryParameters:t||{},headers:{},data:a||{}};return s.request(d,n)},getAddToCartRate({index:e,startDate:t,endDate:a,tags:n},c){if(!e)throw new Error("Parameter `index` is required when calling `getAddToCartRate`.");const i="/2/conversions/addToCartRate",h={},d={};e!==void 0&&(d.index=e.toString()),t!==void 0&&(d.startDate=t.toString()),a!==void 0&&(d.endDate=a.toString()),n!==void 0&&(d.tags=n.toString());const f={method:"GET",path:i,queryParameters:d,headers:h};return s.request(f,c)},getAverageClickPosition({index:e,startDate:t,endDate:a,tags:n},c){if(!e)throw new Error("Parameter `index` is required when calling `getAverageClickPosition`.");const i="/2/clicks/averageClickPosition",h={},d={};e!==void 0&&(d.index=e.toString()),t!==void 0&&(d.startDate=t.toString()),a!==void 0&&(d.endDate=a.toString()),n!==void 0&&(d.tags=n.toString());const f={method:"GET",path:i,queryParameters:d,headers:h};return s.request(f,c)},getClickPositions({index:e,startDate:t,endDate:a,tags:n},c){if(!e)throw new Error("Parameter `index` is required when calling `getClickPositions`.");const i="/2/clicks/positions",h={},d={};e!==void 0&&(d.index=e.toString()),t!==void 0&&(d.startDate=t.toString()),a!==void 0&&(d.endDate=a.toString()),n!==void 0&&(d.tags=n.toString());const f={method:"GET",path:i,queryParameters:d,headers:h};return s.request(f,c)},getClickThroughRate({index:e,startDate:t,endDate:a,tags:n},c){if(!e)throw new Error("Parameter `index` is required when calling `getClickThroughRate`.");const i="/2/clicks/clickThroughRate",h={},d={};e!==void 0&&(d.index=e.toString()),t!==void 0&&(d.startDate=t.toString()),a!==void 0&&(d.endDate=a.toString()),n!==void 0&&(d.tags=n.toString());const f={method:"GET",path:i,queryParameters:d,headers:h};return s.request(f,c)},getConversionRate({index:e,startDate:t,endDate:a,tags:n},c){if(!e)throw new Error("Parameter `index` is required when calling `getConversionRate`.");const i="/2/conversions/conversionRate",h={},d={};e!==void 0&&(d.index=e.toString()),t!==void 0&&(d.startDate=t.toString()),a!==void 0&&(d.endDate=a.toString()),n!==void 0&&(d.tags=n.toString());const f={method:"GET",path:i,queryParameters:d,headers:h};return s.request(f,c)},getNoClickRate({index:e,startDate:t,endDate:a,tags:n},c){if(!e)throw new Error("Parameter `index` is required when calling `getNoClickRate`.");const i="/2/searches/noClickRate",h={},d={};e!==void 0&&(d.index=e.toString()),t!==void 0&&(d.startDate=t.toString()),a!==void 0&&(d.endDate=a.toString()),n!==void 0&&(d.tags=n.toString());const f={method:"GET",path:i,queryParameters:d,headers:h};return s.request(f,c)},getNoResultsRate({index:e,startDate:t,endDate:a,tags:n},c){if(!e)throw new Error("Parameter `index` is required when calling `getNoResultsRate`.");const i="/2/searches/noResultRate",h={},d={};e!==void 0&&(d.index=e.toString()),t!==void 0&&(d.startDate=t.toString()),a!==void 0&&(d.endDate=a.toString()),n!==void 0&&(d.tags=n.toString());const f={method:"GET",path:i,queryParameters:d,headers:h};return s.request(f,c)},getPurchaseRate({index:e,startDate:t,endDate:a,tags:n},c){if(!e)throw new Error("Parameter `index` is required when calling `getPurchaseRate`.");const i="/2/conversions/purchaseRate",h={},d={};e!==void 0&&(d.index=e.toString()),t!==void 0&&(d.startDate=t.toString()),a!==void 0&&(d.endDate=a.toString()),n!==void 0&&(d.tags=n.toString());const f={method:"GET",path:i,queryParameters:d,headers:h};return s.request(f,c)},getRevenue({index:e,startDate:t,endDate:a,tags:n},c){if(!e)throw new Error("Parameter `index` is required when calling `getRevenue`.");const i="/2/conversions/revenue",h={},d={};e!==void 0&&(d.index=e.toString()),t!==void 0&&(d.startDate=t.toString()),a!==void 0&&(d.endDate=a.toString()),n!==void 0&&(d.tags=n.toString());const f={method:"GET",path:i,queryParameters:d,headers:h};return s.request(f,c)},getSearchesCount({index:e,startDate:t,endDate:a,tags:n},c){if(!e)throw new Error("Parameter `index` is required when calling `getSearchesCount`.");const i="/2/searches/count",h={},d={};e!==void 0&&(d.index=e.toString()),t!==void 0&&(d.startDate=t.toString()),a!==void 0&&(d.endDate=a.toString()),n!==void 0&&(d.tags=n.toString());const f={method:"GET",path:i,queryParameters:d,headers:h};return s.request(f,c)},getSearchesNoClicks({index:e,startDate:t,endDate:a,limit:n,offset:c,tags:i},h){if(!e)throw new Error("Parameter `index` is required when calling `getSearchesNoClicks`.");const d="/2/searches/noClicks",f={},p={};e!==void 0&&(p.index=e.toString()),t!==void 0&&(p.startDate=t.toString()),a!==void 0&&(p.endDate=a.toString()),n!==void 0&&(p.limit=n.toString()),c!==void 0&&(p.offset=c.toString()),i!==void 0&&(p.tags=i.toString());const P={method:"GET",path:d,queryParameters:p,headers:f};return s.request(P,h)},getSearchesNoResults({index:e,startDate:t,endDate:a,limit:n,offset:c,tags:i},h){if(!e)throw new Error("Parameter `index` is required when calling `getSearchesNoResults`.");const d="/2/searches/noResults",f={},p={};e!==void 0&&(p.index=e.toString()),t!==void 0&&(p.startDate=t.toString()),a!==void 0&&(p.endDate=a.toString()),n!==void 0&&(p.limit=n.toString()),c!==void 0&&(p.offset=c.toString()),i!==void 0&&(p.tags=i.toString());const P={method:"GET",path:d,queryParameters:p,headers:f};return s.request(P,h)},getStatus({index:e},t){if(!e)throw new Error("Parameter `index` is required when calling `getStatus`.");const a="/2/status",n={},c={};e!==void 0&&(c.index=e.toString());const i={method:"GET",path:a,queryParameters:c,headers:n};return s.request(i,t)},getTopCountries({index:e,startDate:t,endDate:a,limit:n,offset:c,tags:i},h){if(!e)throw new Error("Parameter `index` is required when calling `getTopCountries`.");const d="/2/countries",f={},p={};e!==void 0&&(p.index=e.toString()),t!==void 0&&(p.startDate=t.toString()),a!==void 0&&(p.endDate=a.toString()),n!==void 0&&(p.limit=n.toString()),c!==void 0&&(p.offset=c.toString()),i!==void 0&&(p.tags=i.toString());const P={method:"GET",path:d,queryParameters:p,headers:f};return s.request(P,h)},getTopFilterAttributes({index:e,search:t,startDate:a,endDate:n,limit:c,offset:i,tags:h},d){if(!e)throw new Error("Parameter `index` is required when calling `getTopFilterAttributes`.");const f="/2/filters",p={},P={};e!==void 0&&(P.index=e.toString()),t!==void 0&&(P.search=t.toString()),a!==void 0&&(P.startDate=a.toString()),n!==void 0&&(P.endDate=n.toString()),c!==void 0&&(P.limit=c.toString()),i!==void 0&&(P.offset=i.toString()),h!==void 0&&(P.tags=h.toString());const y={method:"GET",path:f,queryParameters:P,headers:p};return s.request(y,d)},getTopFilterForAttribute({attribute:e,index:t,search:a,startDate:n,endDate:c,limit:i,offset:h,tags:d},f){if(!e)throw new Error("Parameter `attribute` is required when calling `getTopFilterForAttribute`.");if(!t)throw new Error("Parameter `index` is required when calling `getTopFilterForAttribute`.");const p="/2/filters/{attribute}".replace("{attribute}",encodeURIComponent(e)),P={},y={};t!==void 0&&(y.index=t.toString()),a!==void 0&&(y.search=a.toString()),n!==void 0&&(y.startDate=n.toString()),c!==void 0&&(y.endDate=c.toString()),i!==void 0&&(y.limit=i.toString()),h!==void 0&&(y.offset=h.toString()),d!==void 0&&(y.tags=d.toString());const w={method:"GET",path:p,queryParameters:y,headers:P};return s.request(w,f)},getTopFiltersNoResults({index:e,search:t,startDate:a,endDate:n,limit:c,offset:i,tags:h},d){if(!e)throw new Error("Parameter `index` is required when calling `getTopFiltersNoResults`.");const f="/2/filters/noResults",p={},P={};e!==void 0&&(P.index=e.toString()),t!==void 0&&(P.search=t.toString()),a!==void 0&&(P.startDate=a.toString()),n!==void 0&&(P.endDate=n.toString()),c!==void 0&&(P.limit=c.toString()),i!==void 0&&(P.offset=i.toString()),h!==void 0&&(P.tags=h.toString());const y={method:"GET",path:f,queryParameters:P,headers:p};return s.request(y,d)},getTopHits({index:e,search:t,clickAnalytics:a,revenueAnalytics:n,startDate:c,endDate:i,limit:h,offset:d,tags:f},p){if(!e)throw new Error("Parameter `index` is required when calling `getTopHits`.");const P="/2/hits",y={},w={};e!==void 0&&(w.index=e.toString()),t!==void 0&&(w.search=t.toString()),a!==void 0&&(w.clickAnalytics=a.toString()),n!==void 0&&(w.revenueAnalytics=n.toString()),c!==void 0&&(w.startDate=c.toString()),i!==void 0&&(w.endDate=i.toString()),h!==void 0&&(w.limit=h.toString()),d!==void 0&&(w.offset=d.toString()),f!==void 0&&(w.tags=f.toString());const E={method:"GET",path:P,queryParameters:w,headers:y};return s.request(E,p)},getTopSearches({index:e,clickAnalytics:t,revenueAnalytics:a,startDate:n,endDate:c,orderBy:i,direction:h,limit:d,offset:f,tags:p},P){if(!e)throw new Error("Parameter `index` is required when calling `getTopSearches`.");const y="/2/searches",w={},E={};e!==void 0&&(E.index=e.toString()),t!==void 0&&(E.clickAnalytics=t.toString()),a!==void 0&&(E.revenueAnalytics=a.toString()),n!==void 0&&(E.startDate=n.toString()),c!==void 0&&(E.endDate=c.toString()),i!==void 0&&(E.orderBy=i.toString()),h!==void 0&&(E.direction=h.toString()),d!==void 0&&(E.limit=d.toString()),f!==void 0&&(E.offset=f.toString()),p!==void 0&&(E.tags=p.toString());const b={method:"GET",path:y,queryParameters:E,headers:w};return s.request(b,P)},getUsersCount({index:e,startDate:t,endDate:a,tags:n},c){if(!e)throw new Error("Parameter `index` is required when calling `getUsersCount`.");const i="/2/users/count",h={},d={};e!==void 0&&(d.index=e.toString()),t!==void 0&&(d.startDate=t.toString()),a!==void 0&&(d.endDate=a.toString()),n!==void 0&&(d.tags=n.toString());const f={method:"GET",path:i,queryParameters:d,headers:h};return s.request(f,c)}}}function Ce(u,r,o,l){if(!u||typeof u!="string")throw new Error("`appId` is missing.");if(!r||typeof r!="string")throw new Error("`apiKey` is missing.");if(o&&(typeof o!="string"||!me.includes(o)))throw new Error(`\`region\` must be one of the following: ${me.join(", ")}`);return pt({appId:u,apiKey:r,region:o,timeouts:{connect:1e3,read:2e3,write:3e4},logger:N(),requester:R(),algoliaAgents:[{segment:"Browser"}],authMode:"WithinQueryParameters",responsesCache:S(),requestsCache:S({serializable:!1}),hostsCache:I({caches:[x({key:`${Y}-${u}`}),S()]}),...l})}const Pt=Object.freeze(Object.defineProperty({__proto__:null,analyticsClient:Ce,apiClientVersion:Y},Symbol.toStringTag,{value:"Module"}));var X="5.34.1",ge=["de","us"];function wt(u){return[{url:u?"insights.{region}.algolia.io".replace("{region}",u):"insights.algolia.io",accept:"readWrite",protocol:"https"}]}function yt({appId:u,apiKey:r,authMode:o,algoliaAgents:l,region:g,...q}){const m=A(u,r,o),s=O({hosts:wt(g),...q,algoliaAgent:U({algoliaAgents:l,client:"Insights",version:X}),baseHeaders:{"content-type":"text/plain",...m.headers(),...q.baseHeaders},baseQueryParameters:{...m.queryParameters(),...q.baseQueryParameters}});return{transporter:s,appId:u,apiKey:r,clearCache(){return Promise.all([s.requestsCache.clear(),s.responsesCache.clear()]).then(()=>{})},get _ua(){return s.algoliaAgent.value},addAlgoliaAgent(e,t){s.algoliaAgent.add({segment:e,version:t})},setClientApiKey({apiKey:e}){!o||o==="WithinHeaders"?s.baseHeaders["x-algolia-api-key"]=e:s.baseQueryParameters["x-algolia-api-key"]=e},customDelete({path:e,parameters:t},a){if(!e)throw new Error("Parameter `path` is required when calling `customDelete`.");const h={method:"DELETE",path:"/{path}".replace("{path}",e),queryParameters:t||{},headers:{}};return s.request(h,a)},customGet({path:e,parameters:t},a){if(!e)throw new Error("Parameter `path` is required when calling `customGet`.");const h={method:"GET",path:"/{path}".replace("{path}",e),queryParameters:t||{},headers:{}};return s.request(h,a)},customPost({path:e,parameters:t,body:a},n){if(!e)throw new Error("Parameter `path` is required when calling `customPost`.");const d={method:"POST",path:"/{path}".replace("{path}",e),queryParameters:t||{},headers:{},data:a||{}};return s.request(d,n)},customPut({path:e,parameters:t,body:a},n){if(!e)throw new Error("Parameter `path` is required when calling `customPut`.");const d={method:"PUT",path:"/{path}".replace("{path}",e),queryParameters:t||{},headers:{},data:a||{}};return s.request(d,n)},deleteUserToken({userToken:e},t){if(!e)throw new Error("Parameter `userToken` is required when calling `deleteUserToken`.");const i={method:"DELETE",path:"/1/usertokens/{userToken}".replace("{userToken}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)},pushEvents(e,t){if(!e)throw new Error("Parameter `insightsEvents` is required when calling `pushEvents`.");if(!e.events)throw new Error("Parameter `insightsEvents.events` is required when calling `pushEvents`.");const i={method:"POST",path:"/1/events",queryParameters:{},headers:{},data:e};return s.request(i,t)}}}function Te(u,r,o,l){if(!u||typeof u!="string")throw new Error("`appId` is missing.");if(!r||typeof r!="string")throw new Error("`apiKey` is missing.");if(o&&(typeof o!="string"||!ge.includes(o)))throw new Error(`\`region\` must be one of the following: ${ge.join(", ")}`);return yt({appId:u,apiKey:r,region:o,timeouts:{connect:1e3,read:2e3,write:3e4},logger:N(),requester:R(),algoliaAgents:[{segment:"Browser"}],authMode:"WithinQueryParameters",responsesCache:S(),requestsCache:S({serializable:!1}),hostsCache:I({caches:[x({key:`${X}-${u}`}),S()]}),...l})}const vt=Object.freeze(Object.defineProperty({__proto__:null,apiClientVersion:X,insightsClient:Te},Symbol.toStringTag,{value:"Module"}));var ee="5.34.1",qe=["eu","us"];function Et(u){return[{url:"personalization.{region}.algolia.com".replace("{region}",u),accept:"readWrite",protocol:"https"}]}function St({appId:u,apiKey:r,authMode:o,algoliaAgents:l,region:g,...q}){const m=A(u,r,o),s=O({hosts:Et(g),...q,algoliaAgent:U({algoliaAgents:l,client:"Personalization",version:ee}),baseHeaders:{"content-type":"text/plain",...m.headers(),...q.baseHeaders},baseQueryParameters:{...m.queryParameters(),...q.baseQueryParameters}});return{transporter:s,appId:u,apiKey:r,clearCache(){return Promise.all([s.requestsCache.clear(),s.responsesCache.clear()]).then(()=>{})},get _ua(){return s.algoliaAgent.value},addAlgoliaAgent(e,t){s.algoliaAgent.add({segment:e,version:t})},setClientApiKey({apiKey:e}){!o||o==="WithinHeaders"?s.baseHeaders["x-algolia-api-key"]=e:s.baseQueryParameters["x-algolia-api-key"]=e},customDelete({path:e,parameters:t},a){if(!e)throw new Error("Parameter `path` is required when calling `customDelete`.");const h={method:"DELETE",path:"/{path}".replace("{path}",e),queryParameters:t||{},headers:{}};return s.request(h,a)},customGet({path:e,parameters:t},a){if(!e)throw new Error("Parameter `path` is required when calling `customGet`.");const h={method:"GET",path:"/{path}".replace("{path}",e),queryParameters:t||{},headers:{}};return s.request(h,a)},customPost({path:e,parameters:t,body:a},n){if(!e)throw new Error("Parameter `path` is required when calling `customPost`.");const d={method:"POST",path:"/{path}".replace("{path}",e),queryParameters:t||{},headers:{},data:a||{}};return s.request(d,n)},customPut({path:e,parameters:t,body:a},n){if(!e)throw new Error("Parameter `path` is required when calling `customPut`.");const d={method:"PUT",path:"/{path}".replace("{path}",e),queryParameters:t||{},headers:{},data:a||{}};return s.request(d,n)},deleteUserProfile({userToken:e},t){if(!e)throw new Error("Parameter `userToken` is required when calling `deleteUserProfile`.");const i={method:"DELETE",path:"/1/profiles/{userToken}".replace("{userToken}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)},getPersonalizationStrategy(e){const c={method:"GET",path:"/1/strategies/personalization",queryParameters:{},headers:{}};return s.request(c,e)},getUserTokenProfile({userToken:e},t){if(!e)throw new Error("Parameter `userToken` is required when calling `getUserTokenProfile`.");const i={method:"GET",path:"/1/profiles/personalization/{userToken}".replace("{userToken}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)},setPersonalizationStrategy(e,t){if(!e)throw new Error("Parameter `personalizationStrategyParams` is required when calling `setPersonalizationStrategy`.");if(!e.eventsScoring)throw new Error("Parameter `personalizationStrategyParams.eventsScoring` is required when calling `setPersonalizationStrategy`.");if(!e.facetsScoring)throw new Error("Parameter `personalizationStrategyParams.facetsScoring` is required when calling `setPersonalizationStrategy`.");if(!e.personalizationImpact)throw new Error("Parameter `personalizationStrategyParams.personalizationImpact` is required when calling `setPersonalizationStrategy`.");const i={method:"POST",path:"/1/strategies/personalization",queryParameters:{},headers:{},data:e};return s.request(i,t)}}}function Ie(u,r,o,l){if(!u||typeof u!="string")throw new Error("`appId` is missing.");if(!r||typeof r!="string")throw new Error("`apiKey` is missing.");if(!o||o&&(typeof o!="string"||!qe.includes(o)))throw new Error(`\`region\` is required and must be one of the following: ${qe.join(", ")}`);return St({appId:u,apiKey:r,region:o,timeouts:{connect:1e3,read:2e3,write:3e4},logger:N(),requester:R(),algoliaAgents:[{segment:"Browser"}],authMode:"WithinQueryParameters",responsesCache:S(),requestsCache:S({serializable:!1}),hostsCache:I({caches:[x({key:`${ee}-${u}`}),S()]}),...l})}const bt=Object.freeze(Object.defineProperty({__proto__:null,apiClientVersion:ee,personalizationClient:Ie},Symbol.toStringTag,{value:"Module"}));var te="5.34.1",fe=["eu","us"];function Ct(u){return[{url:"query-suggestions.{region}.algolia.com".replace("{region}",u),accept:"readWrite",protocol:"https"}]}function Tt({appId:u,apiKey:r,authMode:o,algoliaAgents:l,region:g,...q}){const m=A(u,r,o),s=O({hosts:Ct(g),...q,algoliaAgent:U({algoliaAgents:l,client:"QuerySuggestions",version:te}),baseHeaders:{"content-type":"text/plain",...m.headers(),...q.baseHeaders},baseQueryParameters:{...m.queryParameters(),...q.baseQueryParameters}});return{transporter:s,appId:u,apiKey:r,clearCache(){return Promise.all([s.requestsCache.clear(),s.responsesCache.clear()]).then(()=>{})},get _ua(){return s.algoliaAgent.value},addAlgoliaAgent(e,t){s.algoliaAgent.add({segment:e,version:t})},setClientApiKey({apiKey:e}){!o||o==="WithinHeaders"?s.baseHeaders["x-algolia-api-key"]=e:s.baseQueryParameters["x-algolia-api-key"]=e},createConfig(e,t){if(!e)throw new Error("Parameter `configurationWithIndex` is required when calling `createConfig`.");const i={method:"POST",path:"/1/configs",queryParameters:{},headers:{},data:e};return s.request(i,t)},customDelete({path:e,parameters:t},a){if(!e)throw new Error("Parameter `path` is required when calling `customDelete`.");const h={method:"DELETE",path:"/{path}".replace("{path}",e),queryParameters:t||{},headers:{}};return s.request(h,a)},customGet({path:e,parameters:t},a){if(!e)throw new Error("Parameter `path` is required when calling `customGet`.");const h={method:"GET",path:"/{path}".replace("{path}",e),queryParameters:t||{},headers:{}};return s.request(h,a)},customPost({path:e,parameters:t,body:a},n){if(!e)throw new Error("Parameter `path` is required when calling `customPost`.");const d={method:"POST",path:"/{path}".replace("{path}",e),queryParameters:t||{},headers:{},data:a||{}};return s.request(d,n)},customPut({path:e,parameters:t,body:a},n){if(!e)throw new Error("Parameter `path` is required when calling `customPut`.");const d={method:"PUT",path:"/{path}".replace("{path}",e),queryParameters:t||{},headers:{},data:a||{}};return s.request(d,n)},deleteConfig({indexName:e},t){if(!e)throw new Error("Parameter `indexName` is required when calling `deleteConfig`.");const i={method:"DELETE",path:"/1/configs/{indexName}".replace("{indexName}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)},getAllConfigs(e){const c={method:"GET",path:"/1/configs",queryParameters:{},headers:{}};return s.request(c,e)},getConfig({indexName:e},t){if(!e)throw new Error("Parameter `indexName` is required when calling `getConfig`.");const i={method:"GET",path:"/1/configs/{indexName}".replace("{indexName}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)},getConfigStatus({indexName:e},t){if(!e)throw new Error("Parameter `indexName` is required when calling `getConfigStatus`.");const i={method:"GET",path:"/1/configs/{indexName}/status".replace("{indexName}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)},getLogFile({indexName:e},t){if(!e)throw new Error("Parameter `indexName` is required when calling `getLogFile`.");const i={method:"GET",path:"/1/logs/{indexName}".replace("{indexName}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)},updateConfig({indexName:e,configuration:t},a){if(!e)throw new Error("Parameter `indexName` is required when calling `updateConfig`.");if(!t)throw new Error("Parameter `configuration` is required when calling `updateConfig`.");if(!t.sourceIndices)throw new Error("Parameter `configuration.sourceIndices` is required when calling `updateConfig`.");const h={method:"PUT",path:"/1/configs/{indexName}".replace("{indexName}",encodeURIComponent(e)),queryParameters:{},headers:{},data:t};return s.request(h,a)}}}function ke(u,r,o,l){if(!u||typeof u!="string")throw new Error("`appId` is missing.");if(!r||typeof r!="string")throw new Error("`apiKey` is missing.");if(!o||o&&(typeof o!="string"||!fe.includes(o)))throw new Error(`\`region\` is required and must be one of the following: ${fe.join(", ")}`);return Tt({appId:u,apiKey:r,region:o,timeouts:{connect:1e3,read:2e3,write:3e4},logger:N(),requester:R(),algoliaAgents:[{segment:"Browser"}],authMode:"WithinQueryParameters",responsesCache:S(),requestsCache:S({serializable:!1}),hostsCache:I({caches:[x({key:`${te}-${u}`}),S()]}),...l})}const It=Object.freeze(Object.defineProperty({__proto__:null,apiClientVersion:te,querySuggestionsClient:ke},Symbol.toStringTag,{value:"Module"}));var M="5.34.1";function kt(u){return[{url:`${u}-dsn.algolia.net`,accept:"read",protocol:"https"},{url:`${u}.algolia.net`,accept:"write",protocol:"https"}].concat(Ee([{url:`${u}-1.algolianet.com`,accept:"readWrite",protocol:"https"},{url:`${u}-2.algolianet.com`,accept:"readWrite",protocol:"https"},{url:`${u}-3.algolianet.com`,accept:"readWrite",protocol:"https"}]))}function Dt({appId:u,apiKey:r,authMode:o,algoliaAgents:l,...g}){const q=A(u,r,o),m=O({hosts:kt(u),...g,algoliaAgent:U({algoliaAgents:l,client:"Search",version:M}),baseHeaders:{"content-type":"text/plain",...q.headers(),...g.baseHeaders},baseQueryParameters:{...q.queryParameters(),...g.baseQueryParameters}});return{transporter:m,appId:u,apiKey:r,clearCache(){return Promise.all([m.requestsCache.clear(),m.responsesCache.clear()]).then(()=>{})},get _ua(){return m.algoliaAgent.value},addAlgoliaAgent(s,e){m.algoliaAgent.add({segment:s,version:e})},setClientApiKey({apiKey:s}){!o||o==="WithinHeaders"?m.baseHeaders["x-algolia-api-key"]=s:m.baseQueryParameters["x-algolia-api-key"]=s},waitForTask({indexName:s,taskID:e,maxRetries:t=50,timeout:a=c=>Math.min(c*200,5e3)},n){let c=0;return G({func:()=>this.getTask({indexName:s,taskID:e},n),validate:i=>i.status==="published",aggregator:()=>c+=1,error:{validate:()=>c>=t,message:()=>`The maximum number of retries exceeded. (${c}/${t})`},timeout:()=>a(c)})},waitForAppTask({taskID:s,maxRetries:e=50,timeout:t=n=>Math.min(n*200,5e3)},a){let n=0;return G({func:()=>this.getAppTask({taskID:s},a),validate:c=>c.status==="published",aggregator:()=>n+=1,error:{validate:()=>n>=e,message:()=>`The maximum number of retries exceeded. (${n}/${e})`},timeout:()=>t(n)})},waitForApiKey({operation:s,key:e,apiKey:t,maxRetries:a=50,timeout:n=i=>Math.min(i*200,5e3)},c){let i=0;const h={aggregator:()=>i+=1,error:{validate:()=>i>=a,message:()=>`The maximum number of retries exceeded. (${i}/${a})`},timeout:()=>n(i)};if(s==="update"){if(!t)throw new Error("`apiKey` is required when waiting for an `update` operation.");return G({...h,func:()=>this.getApiKey({key:e},c),validate:d=>{for(const f of Object.keys(t)){const p=t[f],P=d[f];if(Array.isArray(p)&&Array.isArray(P)){if(p.length!==P.length||p.some((y,w)=>y!==P[w]))return!1}else if(p!==P)return!1}return!0}})}return G({...h,func:()=>this.getApiKey({key:e},c).catch(d=>{if(d.status!==404)throw d}),validate:d=>s==="add"?d!==void 0:d===void 0})},browseObjects({indexName:s,browseParams:e,...t},a){return G({func:n=>this.browse({indexName:s,browseParams:{cursor:n?n.cursor:void 0,hitsPerPage:1e3,...e}},a),validate:n=>n.cursor===void 0,...t})},browseRules({indexName:s,searchRulesParams:e,...t},a){const n={...e,hitsPerPage:e?.hitsPerPage||1e3};return G({func:c=>this.searchRules({indexName:s,searchRulesParams:{...n,page:c?c.page+1:n.page||0}},a),validate:c=>c.hits.length<n.hitsPerPage,...t})},browseSynonyms({indexName:s,searchSynonymsParams:e,...t},a){const n={...e,page:e?.page||0,hitsPerPage:1e3};return G({func:c=>{const i=this.searchSynonyms({indexName:s,searchSynonymsParams:{...n,page:n.page}},a);return n.page+=1,i},validate:c=>c.hits.length<n.hitsPerPage,...t})},async chunkedBatch({indexName:s,objects:e,action:t="addObject",waitForTasks:a,batchSize:n=1e3},c){let i=[];const h=[],d=e.entries();for(const[f,p]of d)i.push({action:t,body:p}),(i.length===n||f===e.length-1)&&(h.push(await this.batch({indexName:s,batchWriteParams:{requests:i}},c)),i=[]);if(a)for(const f of h)await this.waitForTask({indexName:s,taskID:f.taskID});return h},async saveObjects({indexName:s,objects:e,waitForTasks:t,batchSize:a},n){return await this.chunkedBatch({indexName:s,objects:e,action:"addObject",waitForTasks:t,batchSize:a},n)},async deleteObjects({indexName:s,objectIDs:e,waitForTasks:t,batchSize:a},n){return await this.chunkedBatch({indexName:s,objects:e.map(c=>({objectID:c})),action:"deleteObject",waitForTasks:t,batchSize:a},n)},async partialUpdateObjects({indexName:s,objects:e,createIfNotExists:t,waitForTasks:a,batchSize:n},c){return await this.chunkedBatch({indexName:s,objects:e,action:t?"partialUpdateObject":"partialUpdateObjectNoCreate",batchSize:n,waitForTasks:a},c)},async replaceAllObjects({indexName:s,objects:e,batchSize:t,scopes:a},n){const c=Math.floor(Math.random()*1e6)+1e5,i=`${s}_tmp_${c}`;a===void 0&&(a=["settings","rules","synonyms"]);try{let h=await this.operationIndex({indexName:s,operationIndexParams:{operation:"copy",destination:i,scope:a}},n);const d=await this.chunkedBatch({indexName:i,objects:e,waitForTasks:!0,batchSize:t},n);await this.waitForTask({indexName:i,taskID:h.taskID}),h=await this.operationIndex({indexName:s,operationIndexParams:{operation:"copy",destination:i,scope:a}},n),await this.waitForTask({indexName:i,taskID:h.taskID});const f=await this.operationIndex({indexName:i,operationIndexParams:{operation:"move",destination:s}},n);return await this.waitForTask({indexName:i,taskID:f.taskID}),{copyOperationResponse:h,batchResponses:d,moveOperationResponse:f}}catch(h){throw await this.deleteIndex({indexName:i}),h}},async indexExists({indexName:s}){try{await this.getSettings({indexName:s})}catch(e){if(e instanceof B&&e.status===404)return!1;throw e}return!0},searchForHits(s,e){return this.search(s,e)},searchForFacets(s,e){return this.search(s,e)},addApiKey(s,e){if(!s)throw new Error("Parameter `apiKey` is required when calling `addApiKey`.");if(!s.acl)throw new Error("Parameter `apiKey.acl` is required when calling `addApiKey`.");const c={method:"POST",path:"/1/keys",queryParameters:{},headers:{},data:s};return m.request(c,e)},addOrUpdateObject({indexName:s,objectID:e,body:t},a){if(!s)throw new Error("Parameter `indexName` is required when calling `addOrUpdateObject`.");if(!e)throw new Error("Parameter `objectID` is required when calling `addOrUpdateObject`.");if(!t)throw new Error("Parameter `body` is required when calling `addOrUpdateObject`.");const h={method:"PUT",path:"/1/indexes/{indexName}/{objectID}".replace("{indexName}",encodeURIComponent(s)).replace("{objectID}",encodeURIComponent(e)),queryParameters:{},headers:{},data:t};return m.request(h,a)},appendSource(s,e){if(!s)throw new Error("Parameter `source` is required when calling `appendSource`.");if(!s.source)throw new Error("Parameter `source.source` is required when calling `appendSource`.");const c={method:"POST",path:"/1/security/sources/append",queryParameters:{},headers:{},data:s};return m.request(c,e)},assignUserId({xAlgoliaUserID:s,assignUserIdParams:e},t){if(!s)throw new Error("Parameter `xAlgoliaUserID` is required when calling `assignUserId`.");if(!e)throw new Error("Parameter `assignUserIdParams` is required when calling `assignUserId`.");if(!e.cluster)throw new Error("Parameter `assignUserIdParams.cluster` is required when calling `assignUserId`.");const a="/1/clusters/mapping",n={},c={};s!==void 0&&(n["X-Algolia-User-ID"]=s.toString());const i={method:"POST",path:a,queryParameters:c,headers:n,data:e};return m.request(i,t)},batch({indexName:s,batchWriteParams:e},t){if(!s)throw new Error("Parameter `indexName` is required when calling `batch`.");if(!e)throw new Error("Parameter `batchWriteParams` is required when calling `batch`.");if(!e.requests)throw new Error("Parameter `batchWriteParams.requests` is required when calling `batch`.");const i={method:"POST",path:"/1/indexes/{indexName}/batch".replace("{indexName}",encodeURIComponent(s)),queryParameters:{},headers:{},data:e};return m.request(i,t)},batchAssignUserIds({xAlgoliaUserID:s,batchAssignUserIdsParams:e},t){if(!s)throw new Error("Parameter `xAlgoliaUserID` is required when calling `batchAssignUserIds`.");if(!e)throw new Error("Parameter `batchAssignUserIdsParams` is required when calling `batchAssignUserIds`.");if(!e.cluster)throw new Error("Parameter `batchAssignUserIdsParams.cluster` is required when calling `batchAssignUserIds`.");if(!e.users)throw new Error("Parameter `batchAssignUserIdsParams.users` is required when calling `batchAssignUserIds`.");const a="/1/clusters/mapping/batch",n={},c={};s!==void 0&&(n["X-Algolia-User-ID"]=s.toString());const i={method:"POST",path:a,queryParameters:c,headers:n,data:e};return m.request(i,t)},batchDictionaryEntries({dictionaryName:s,batchDictionaryEntriesParams:e},t){if(!s)throw new Error("Parameter `dictionaryName` is required when calling `batchDictionaryEntries`.");if(!e)throw new Error("Parameter `batchDictionaryEntriesParams` is required when calling `batchDictionaryEntries`.");if(!e.requests)throw new Error("Parameter `batchDictionaryEntriesParams.requests` is required when calling `batchDictionaryEntries`.");const i={method:"POST",path:"/1/dictionaries/{dictionaryName}/batch".replace("{dictionaryName}",encodeURIComponent(s)),queryParameters:{},headers:{},data:e};return m.request(i,t)},browse({indexName:s,browseParams:e},t){if(!s)throw new Error("Parameter `indexName` is required when calling `browse`.");const i={method:"POST",path:"/1/indexes/{indexName}/browse".replace("{indexName}",encodeURIComponent(s)),queryParameters:{},headers:{},data:e||{},useReadTransporter:!0};return m.request(i,t)},clearObjects({indexName:s},e){if(!s)throw new Error("Parameter `indexName` is required when calling `clearObjects`.");const c={method:"POST",path:"/1/indexes/{indexName}/clear".replace("{indexName}",encodeURIComponent(s)),queryParameters:{},headers:{}};return m.request(c,e)},clearRules({indexName:s,forwardToReplicas:e},t){if(!s)throw new Error("Parameter `indexName` is required when calling `clearRules`.");const a="/1/indexes/{indexName}/rules/clear".replace("{indexName}",encodeURIComponent(s)),n={},c={};e!==void 0&&(c.forwardToReplicas=e.toString());const i={method:"POST",path:a,queryParameters:c,headers:n};return m.request(i,t)},clearSynonyms({indexName:s,forwardToReplicas:e},t){if(!s)throw new Error("Parameter `indexName` is required when calling `clearSynonyms`.");const a="/1/indexes/{indexName}/synonyms/clear".replace("{indexName}",encodeURIComponent(s)),n={},c={};e!==void 0&&(c.forwardToReplicas=e.toString());const i={method:"POST",path:a,queryParameters:c,headers:n};return m.request(i,t)},customDelete({path:s,parameters:e},t){if(!s)throw new Error("Parameter `path` is required when calling `customDelete`.");const i={method:"DELETE",path:"/{path}".replace("{path}",s),queryParameters:e||{},headers:{}};return m.request(i,t)},customGet({path:s,parameters:e},t){if(!s)throw new Error("Parameter `path` is required when calling `customGet`.");const i={method:"GET",path:"/{path}".replace("{path}",s),queryParameters:e||{},headers:{}};return m.request(i,t)},customPost({path:s,parameters:e,body:t},a){if(!s)throw new Error("Parameter `path` is required when calling `customPost`.");const h={method:"POST",path:"/{path}".replace("{path}",s),queryParameters:e||{},headers:{},data:t||{}};return m.request(h,a)},customPut({path:s,parameters:e,body:t},a){if(!s)throw new Error("Parameter `path` is required when calling `customPut`.");const h={method:"PUT",path:"/{path}".replace("{path}",s),queryParameters:e||{},headers:{},data:t||{}};return m.request(h,a)},deleteApiKey({key:s},e){if(!s)throw new Error("Parameter `key` is required when calling `deleteApiKey`.");const c={method:"DELETE",path:"/1/keys/{key}".replace("{key}",encodeURIComponent(s)),queryParameters:{},headers:{}};return m.request(c,e)},deleteBy({indexName:s,deleteByParams:e},t){if(!s)throw new Error("Parameter `indexName` is required when calling `deleteBy`.");if(!e)throw new Error("Parameter `deleteByParams` is required when calling `deleteBy`.");const i={method:"POST",path:"/1/indexes/{indexName}/deleteByQuery".replace("{indexName}",encodeURIComponent(s)),queryParameters:{},headers:{},data:e};return m.request(i,t)},deleteIndex({indexName:s},e){if(!s)throw new Error("Parameter `indexName` is required when calling `deleteIndex`.");const c={method:"DELETE",path:"/1/indexes/{indexName}".replace("{indexName}",encodeURIComponent(s)),queryParameters:{},headers:{}};return m.request(c,e)},deleteObject({indexName:s,objectID:e},t){if(!s)throw new Error("Parameter `indexName` is required when calling `deleteObject`.");if(!e)throw new Error("Parameter `objectID` is required when calling `deleteObject`.");const i={method:"DELETE",path:"/1/indexes/{indexName}/{objectID}".replace("{indexName}",encodeURIComponent(s)).replace("{objectID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return m.request(i,t)},deleteRule({indexName:s,objectID:e,forwardToReplicas:t},a){if(!s)throw new Error("Parameter `indexName` is required when calling `deleteRule`.");if(!e)throw new Error("Parameter `objectID` is required when calling `deleteRule`.");const n="/1/indexes/{indexName}/rules/{objectID}".replace("{indexName}",encodeURIComponent(s)).replace("{objectID}",encodeURIComponent(e)),c={},i={};t!==void 0&&(i.forwardToReplicas=t.toString());const h={method:"DELETE",path:n,queryParameters:i,headers:c};return m.request(h,a)},deleteSource({source:s},e){if(!s)throw new Error("Parameter `source` is required when calling `deleteSource`.");const c={method:"DELETE",path:"/1/security/sources/{source}".replace("{source}",encodeURIComponent(s)),queryParameters:{},headers:{}};return m.request(c,e)},deleteSynonym({indexName:s,objectID:e,forwardToReplicas:t},a){if(!s)throw new Error("Parameter `indexName` is required when calling `deleteSynonym`.");if(!e)throw new Error("Parameter `objectID` is required when calling `deleteSynonym`.");const n="/1/indexes/{indexName}/synonyms/{objectID}".replace("{indexName}",encodeURIComponent(s)).replace("{objectID}",encodeURIComponent(e)),c={},i={};t!==void 0&&(i.forwardToReplicas=t.toString());const h={method:"DELETE",path:n,queryParameters:i,headers:c};return m.request(h,a)},getApiKey({key:s},e){if(!s)throw new Error("Parameter `key` is required when calling `getApiKey`.");const c={method:"GET",path:"/1/keys/{key}".replace("{key}",encodeURIComponent(s)),queryParameters:{},headers:{}};return m.request(c,e)},getAppTask({taskID:s},e){if(!s)throw new Error("Parameter `taskID` is required when calling `getAppTask`.");const c={method:"GET",path:"/1/task/{taskID}".replace("{taskID}",encodeURIComponent(s)),queryParameters:{},headers:{}};return m.request(c,e)},getDictionaryLanguages(s){const n={method:"GET",path:"/1/dictionaries/*/languages",queryParameters:{},headers:{}};return m.request(n,s)},getDictionarySettings(s){const n={method:"GET",path:"/1/dictionaries/*/settings",queryParameters:{},headers:{}};return m.request(n,s)},getLogs({offset:s,length:e,indexName:t,type:a}={},n=void 0){const c="/1/logs",i={},h={};s!==void 0&&(h.offset=s.toString()),e!==void 0&&(h.length=e.toString()),t!==void 0&&(h.indexName=t.toString()),a!==void 0&&(h.type=a.toString());const d={method:"GET",path:c,queryParameters:h,headers:i};return m.request(d,n)},getObject({indexName:s,objectID:e,attributesToRetrieve:t},a){if(!s)throw new Error("Parameter `indexName` is required when calling `getObject`.");if(!e)throw new Error("Parameter `objectID` is required when calling `getObject`.");const n="/1/indexes/{indexName}/{objectID}".replace("{indexName}",encodeURIComponent(s)).replace("{objectID}",encodeURIComponent(e)),c={},i={};t!==void 0&&(i.attributesToRetrieve=t.toString());const h={method:"GET",path:n,queryParameters:i,headers:c};return m.request(h,a)},getObjects(s,e){if(!s)throw new Error("Parameter `getObjectsParams` is required when calling `getObjects`.");if(!s.requests)throw new Error("Parameter `getObjectsParams.requests` is required when calling `getObjects`.");const c={method:"POST",path:"/1/indexes/*/objects",queryParameters:{},headers:{},data:s,useReadTransporter:!0,cacheable:!0};return m.request(c,e)},getRule({indexName:s,objectID:e},t){if(!s)throw new Error("Parameter `indexName` is required when calling `getRule`.");if(!e)throw new Error("Parameter `objectID` is required when calling `getRule`.");const i={method:"GET",path:"/1/indexes/{indexName}/rules/{objectID}".replace("{indexName}",encodeURIComponent(s)).replace("{objectID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return m.request(i,t)},getSettings({indexName:s},e){if(!s)throw new Error("Parameter `indexName` is required when calling `getSettings`.");const c={method:"GET",path:"/1/indexes/{indexName}/settings".replace("{indexName}",encodeURIComponent(s)),queryParameters:{},headers:{}};return m.request(c,e)},getSources(s){const n={method:"GET",path:"/1/security/sources",queryParameters:{},headers:{}};return m.request(n,s)},getSynonym({indexName:s,objectID:e},t){if(!s)throw new Error("Parameter `indexName` is required when calling `getSynonym`.");if(!e)throw new Error("Parameter `objectID` is required when calling `getSynonym`.");const i={method:"GET",path:"/1/indexes/{indexName}/synonyms/{objectID}".replace("{indexName}",encodeURIComponent(s)).replace("{objectID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return m.request(i,t)},getTask({indexName:s,taskID:e},t){if(!s)throw new Error("Parameter `indexName` is required when calling `getTask`.");if(!e)throw new Error("Parameter `taskID` is required when calling `getTask`.");const i={method:"GET",path:"/1/indexes/{indexName}/task/{taskID}".replace("{indexName}",encodeURIComponent(s)).replace("{taskID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return m.request(i,t)},getTopUserIds(s){const n={method:"GET",path:"/1/clusters/mapping/top",queryParameters:{},headers:{}};return m.request(n,s)},getUserId({userID:s},e){if(!s)throw new Error("Parameter `userID` is required when calling `getUserId`.");const c={method:"GET",path:"/1/clusters/mapping/{userID}".replace("{userID}",encodeURIComponent(s)),queryParameters:{},headers:{}};return m.request(c,e)},hasPendingMappings({getClusters:s}={},e=void 0){const t="/1/clusters/mapping/pending",a={},n={};s!==void 0&&(n.getClusters=s.toString());const c={method:"GET",path:t,queryParameters:n,headers:a};return m.request(c,e)},listApiKeys(s){const n={method:"GET",path:"/1/keys",queryParameters:{},headers:{}};return m.request(n,s)},listClusters(s){const n={method:"GET",path:"/1/clusters",queryParameters:{},headers:{}};return m.request(n,s)},listIndices({page:s,hitsPerPage:e}={},t=void 0){const a="/1/indexes",n={},c={};s!==void 0&&(c.page=s.toString()),e!==void 0&&(c.hitsPerPage=e.toString());const i={method:"GET",path:a,queryParameters:c,headers:n};return m.request(i,t)},listUserIds({page:s,hitsPerPage:e}={},t=void 0){const a="/1/clusters/mapping",n={},c={};s!==void 0&&(c.page=s.toString()),e!==void 0&&(c.hitsPerPage=e.toString());const i={method:"GET",path:a,queryParameters:c,headers:n};return m.request(i,t)},multipleBatch(s,e){if(!s)throw new Error("Parameter `batchParams` is required when calling `multipleBatch`.");if(!s.requests)throw new Error("Parameter `batchParams.requests` is required when calling `multipleBatch`.");const c={method:"POST",path:"/1/indexes/*/batch",queryParameters:{},headers:{},data:s};return m.request(c,e)},operationIndex({indexName:s,operationIndexParams:e},t){if(!s)throw new Error("Parameter `indexName` is required when calling `operationIndex`.");if(!e)throw new Error("Parameter `operationIndexParams` is required when calling `operationIndex`.");if(!e.operation)throw new Error("Parameter `operationIndexParams.operation` is required when calling `operationIndex`.");if(!e.destination)throw new Error("Parameter `operationIndexParams.destination` is required when calling `operationIndex`.");const i={method:"POST",path:"/1/indexes/{indexName}/operation".replace("{indexName}",encodeURIComponent(s)),queryParameters:{},headers:{},data:e};return m.request(i,t)},partialUpdateObject({indexName:s,objectID:e,attributesToUpdate:t,createIfNotExists:a},n){if(!s)throw new Error("Parameter `indexName` is required when calling `partialUpdateObject`.");if(!e)throw new Error("Parameter `objectID` is required when calling `partialUpdateObject`.");if(!t)throw new Error("Parameter `attributesToUpdate` is required when calling `partialUpdateObject`.");const c="/1/indexes/{indexName}/{objectID}/partial".replace("{indexName}",encodeURIComponent(s)).replace("{objectID}",encodeURIComponent(e)),i={},h={};a!==void 0&&(h.createIfNotExists=a.toString());const d={method:"POST",path:c,queryParameters:h,headers:i,data:t};return m.request(d,n)},removeUserId({userID:s},e){if(!s)throw new Error("Parameter `userID` is required when calling `removeUserId`.");const c={method:"DELETE",path:"/1/clusters/mapping/{userID}".replace("{userID}",encodeURIComponent(s)),queryParameters:{},headers:{}};return m.request(c,e)},replaceSources({source:s},e){if(!s)throw new Error("Parameter `source` is required when calling `replaceSources`.");const c={method:"PUT",path:"/1/security/sources",queryParameters:{},headers:{},data:s};return m.request(c,e)},restoreApiKey({key:s},e){if(!s)throw new Error("Parameter `key` is required when calling `restoreApiKey`.");const c={method:"POST",path:"/1/keys/{key}/restore".replace("{key}",encodeURIComponent(s)),queryParameters:{},headers:{}};return m.request(c,e)},saveObject({indexName:s,body:e},t){if(!s)throw new Error("Parameter `indexName` is required when calling `saveObject`.");if(!e)throw new Error("Parameter `body` is required when calling `saveObject`.");const i={method:"POST",path:"/1/indexes/{indexName}".replace("{indexName}",encodeURIComponent(s)),queryParameters:{},headers:{},data:e};return m.request(i,t)},saveRule({indexName:s,objectID:e,rule:t,forwardToReplicas:a},n){if(!s)throw new Error("Parameter `indexName` is required when calling `saveRule`.");if(!e)throw new Error("Parameter `objectID` is required when calling `saveRule`.");if(!t)throw new Error("Parameter `rule` is required when calling `saveRule`.");if(!t.objectID)throw new Error("Parameter `rule.objectID` is required when calling `saveRule`.");if(!t.consequence)throw new Error("Parameter `rule.consequence` is required when calling `saveRule`.");const c="/1/indexes/{indexName}/rules/{objectID}".replace("{indexName}",encodeURIComponent(s)).replace("{objectID}",encodeURIComponent(e)),i={},h={};a!==void 0&&(h.forwardToReplicas=a.toString());const d={method:"PUT",path:c,queryParameters:h,headers:i,data:t};return m.request(d,n)},saveRules({indexName:s,rules:e,forwardToReplicas:t,clearExistingRules:a},n){if(!s)throw new Error("Parameter `indexName` is required when calling `saveRules`.");if(!e)throw new Error("Parameter `rules` is required when calling `saveRules`.");const c="/1/indexes/{indexName}/rules/batch".replace("{indexName}",encodeURIComponent(s)),i={},h={};t!==void 0&&(h.forwardToReplicas=t.toString()),a!==void 0&&(h.clearExistingRules=a.toString());const d={method:"POST",path:c,queryParameters:h,headers:i,data:e};return m.request(d,n)},saveSynonym({indexName:s,objectID:e,synonymHit:t,forwardToReplicas:a},n){if(!s)throw new Error("Parameter `indexName` is required when calling `saveSynonym`.");if(!e)throw new Error("Parameter `objectID` is required when calling `saveSynonym`.");if(!t)throw new Error("Parameter `synonymHit` is required when calling `saveSynonym`.");if(!t.objectID)throw new Error("Parameter `synonymHit.objectID` is required when calling `saveSynonym`.");if(!t.type)throw new Error("Parameter `synonymHit.type` is required when calling `saveSynonym`.");const c="/1/indexes/{indexName}/synonyms/{objectID}".replace("{indexName}",encodeURIComponent(s)).replace("{objectID}",encodeURIComponent(e)),i={},h={};a!==void 0&&(h.forwardToReplicas=a.toString());const d={method:"PUT",path:c,queryParameters:h,headers:i,data:t};return m.request(d,n)},saveSynonyms({indexName:s,synonymHit:e,forwardToReplicas:t,replaceExistingSynonyms:a},n){if(!s)throw new Error("Parameter `indexName` is required when calling `saveSynonyms`.");if(!e)throw new Error("Parameter `synonymHit` is required when calling `saveSynonyms`.");const c="/1/indexes/{indexName}/synonyms/batch".replace("{indexName}",encodeURIComponent(s)),i={},h={};t!==void 0&&(h.forwardToReplicas=t.toString()),a!==void 0&&(h.replaceExistingSynonyms=a.toString());const d={method:"POST",path:c,queryParameters:h,headers:i,data:e};return m.request(d,n)},search(s,e){if(s&&Array.isArray(s)&&(s={requests:s.map(({params:h,...d})=>d.type==="facet"?{...d,...h,type:"facet"}:{...d,...h,facet:void 0,maxFacetHits:void 0,facetQuery:void 0})}),!s)throw new Error("Parameter `searchMethodParams` is required when calling `search`.");if(!s.requests)throw new Error("Parameter `searchMethodParams.requests` is required when calling `search`.");const c={method:"POST",path:"/1/indexes/*/queries",queryParameters:{},headers:{},data:s,useReadTransporter:!0,cacheable:!0};return m.request(c,e)},searchDictionaryEntries({dictionaryName:s,searchDictionaryEntriesParams:e},t){if(!s)throw new Error("Parameter `dictionaryName` is required when calling `searchDictionaryEntries`.");if(!e)throw new Error("Parameter `searchDictionaryEntriesParams` is required when calling `searchDictionaryEntries`.");if(!e.query)throw new Error("Parameter `searchDictionaryEntriesParams.query` is required when calling `searchDictionaryEntries`.");const i={method:"POST",path:"/1/dictionaries/{dictionaryName}/search".replace("{dictionaryName}",encodeURIComponent(s)),queryParameters:{},headers:{},data:e,useReadTransporter:!0,cacheable:!0};return m.request(i,t)},searchForFacetValues({indexName:s,facetName:e,searchForFacetValuesRequest:t},a){if(!s)throw new Error("Parameter `indexName` is required when calling `searchForFacetValues`.");if(!e)throw new Error("Parameter `facetName` is required when calling `searchForFacetValues`.");const h={method:"POST",path:"/1/indexes/{indexName}/facets/{facetName}/query".replace("{indexName}",encodeURIComponent(s)).replace("{facetName}",encodeURIComponent(e)),queryParameters:{},headers:{},data:t||{},useReadTransporter:!0,cacheable:!0};return m.request(h,a)},searchRules({indexName:s,searchRulesParams:e},t){if(!s)throw new Error("Parameter `indexName` is required when calling `searchRules`.");const i={method:"POST",path:"/1/indexes/{indexName}/rules/search".replace("{indexName}",encodeURIComponent(s)),queryParameters:{},headers:{},data:e||{},useReadTransporter:!0,cacheable:!0};return m.request(i,t)},searchSingleIndex({indexName:s,searchParams:e},t){if(!s)throw new Error("Parameter `indexName` is required when calling `searchSingleIndex`.");const i={method:"POST",path:"/1/indexes/{indexName}/query".replace("{indexName}",encodeURIComponent(s)),queryParameters:{},headers:{},data:e||{},useReadTransporter:!0,cacheable:!0};return m.request(i,t)},searchSynonyms({indexName:s,searchSynonymsParams:e},t){if(!s)throw new Error("Parameter `indexName` is required when calling `searchSynonyms`.");const i={method:"POST",path:"/1/indexes/{indexName}/synonyms/search".replace("{indexName}",encodeURIComponent(s)),queryParameters:{},headers:{},data:e||{},useReadTransporter:!0,cacheable:!0};return m.request(i,t)},searchUserIds(s,e){if(!s)throw new Error("Parameter `searchUserIdsParams` is required when calling `searchUserIds`.");if(!s.query)throw new Error("Parameter `searchUserIdsParams.query` is required when calling `searchUserIds`.");const c={method:"POST",path:"/1/clusters/mapping/search",queryParameters:{},headers:{},data:s,useReadTransporter:!0,cacheable:!0};return m.request(c,e)},setDictionarySettings(s,e){if(!s)throw new Error("Parameter `dictionarySettingsParams` is required when calling `setDictionarySettings`.");if(!s.disableStandardEntries)throw new Error("Parameter `dictionarySettingsParams.disableStandardEntries` is required when calling `setDictionarySettings`.");const c={method:"PUT",path:"/1/dictionaries/*/settings",queryParameters:{},headers:{},data:s};return m.request(c,e)},setSettings({indexName:s,indexSettings:e,forwardToReplicas:t},a){if(!s)throw new Error("Parameter `indexName` is required when calling `setSettings`.");if(!e)throw new Error("Parameter `indexSettings` is required when calling `setSettings`.");const n="/1/indexes/{indexName}/settings".replace("{indexName}",encodeURIComponent(s)),c={},i={};t!==void 0&&(i.forwardToReplicas=t.toString());const h={method:"PUT",path:n,queryParameters:i,headers:c,data:e};return m.request(h,a)},updateApiKey({key:s,apiKey:e},t){if(!s)throw new Error("Parameter `key` is required when calling `updateApiKey`.");if(!e)throw new Error("Parameter `apiKey` is required when calling `updateApiKey`.");if(!e.acl)throw new Error("Parameter `apiKey.acl` is required when calling `updateApiKey`.");const i={method:"PUT",path:"/1/keys/{key}".replace("{key}",encodeURIComponent(s)),queryParameters:{},headers:{},data:e};return m.request(i,t)}}}function De(u,r,o){if(!u||typeof u!="string")throw new Error("`appId` is missing.");if(!r||typeof r!="string")throw new Error("`apiKey` is missing.");return Dt({appId:u,apiKey:r,timeouts:{connect:1e3,read:2e3,write:3e4},logger:N(),requester:R(),algoliaAgents:[{segment:"Browser"}],authMode:"WithinQueryParameters",responsesCache:S(),requestsCache:S({serializable:!1}),hostsCache:I({caches:[x({key:`${M}-${u}`}),S()]}),...o})}const Rt=Object.freeze(Object.defineProperty({__proto__:null,apiClientVersion:M,searchClient:De},Symbol.toStringTag,{value:"Module"}));var re="1.34.1",pe=["eu","us"];function xt(u){return[{url:"data.{region}.algolia.com".replace("{region}",u),accept:"readWrite",protocol:"https"}]}function At(u){return u.type==="onDemand"}function Ut(u){return u.type==="schedule"}function Nt(u){return u.type==="subscription"}function Ot({appId:u,apiKey:r,authMode:o,algoliaAgents:l,region:g,...q}){const m=A(u,r,o),s=O({hosts:xt(g),...q,algoliaAgent:U({algoliaAgents:l,client:"Ingestion",version:re}),baseHeaders:{"content-type":"text/plain",...m.headers(),...q.baseHeaders},baseQueryParameters:{...m.queryParameters(),...q.baseQueryParameters}});return{transporter:s,appId:u,apiKey:r,clearCache(){return Promise.all([s.requestsCache.clear(),s.responsesCache.clear()]).then(()=>{})},get _ua(){return s.algoliaAgent.value},addAlgoliaAgent(e,t){s.algoliaAgent.add({segment:e,version:t})},setClientApiKey({apiKey:e}){!o||o==="WithinHeaders"?s.baseHeaders["x-algolia-api-key"]=e:s.baseQueryParameters["x-algolia-api-key"]=e},async chunkedPush({indexName:e,objects:t,action:a="addObject",waitForTasks:n,batchSize:c=1e3,referenceIndexName:i},h){let d=[],f=0;const p=[],P=Math.floor(c/10)||c,y=t.entries();for(const[w,E]of y)if(d.push(E),(d.length===c||w===t.length-1)&&(p.push(await this.push({indexName:e,pushTaskPayload:{action:a,records:d},referenceIndexName:i},h)),d=[]),n&&p.length>0&&(p.length%P===0||w===t.length-1)){for(const b of p.slice(f,f+P)){if(!b.eventID)throw new Error("received unexpected response from the push endpoint, eventID must not be undefined");let $=0;await G({func:async()=>{if(b.eventID===void 0||!b.eventID)throw new Error("received unexpected response from the push endpoint, eventID must not be undefined");return this.getEvent({runID:b.runID,eventID:b.eventID}).catch(H=>{if(H.status!==404)throw H})},validate:H=>H!==void 0,aggregator:()=>$+=1,error:{validate:()=>$>=50,message:()=>`The maximum number of retries exceeded. (${$}/50)`},timeout:()=>Math.min($*500,5e3)})}f+=P}return p},createAuthentication(e,t){if(!e)throw new Error("Parameter `authenticationCreate` is required when calling `createAuthentication`.");if(!e.type)throw new Error("Parameter `authenticationCreate.type` is required when calling `createAuthentication`.");if(!e.name)throw new Error("Parameter `authenticationCreate.name` is required when calling `createAuthentication`.");if(!e.input)throw new Error("Parameter `authenticationCreate.input` is required when calling `createAuthentication`.");const i={method:"POST",path:"/1/authentications",queryParameters:{},headers:{},data:e};return s.request(i,t)},createDestination(e,t){if(!e)throw new Error("Parameter `destinationCreate` is required when calling `createDestination`.");if(!e.type)throw new Error("Parameter `destinationCreate.type` is required when calling `createDestination`.");if(!e.name)throw new Error("Parameter `destinationCreate.name` is required when calling `createDestination`.");if(!e.input)throw new Error("Parameter `destinationCreate.input` is required when calling `createDestination`.");const i={method:"POST",path:"/1/destinations",queryParameters:{},headers:{},data:e};return s.request(i,t)},createSource(e,t){if(!e)throw new Error("Parameter `sourceCreate` is required when calling `createSource`.");if(!e.type)throw new Error("Parameter `sourceCreate.type` is required when calling `createSource`.");if(!e.name)throw new Error("Parameter `sourceCreate.name` is required when calling `createSource`.");const i={method:"POST",path:"/1/sources",queryParameters:{},headers:{},data:e};return s.request(i,t)},createTask(e,t){if(!e)throw new Error("Parameter `taskCreate` is required when calling `createTask`.");if(!e.sourceID)throw new Error("Parameter `taskCreate.sourceID` is required when calling `createTask`.");if(!e.destinationID)throw new Error("Parameter `taskCreate.destinationID` is required when calling `createTask`.");if(!e.action)throw new Error("Parameter `taskCreate.action` is required when calling `createTask`.");const i={method:"POST",path:"/2/tasks",queryParameters:{},headers:{},data:e};return s.request(i,t)},createTaskV1(e,t){if(!e)throw new Error("Parameter `taskCreate` is required when calling `createTaskV1`.");if(!e.sourceID)throw new Error("Parameter `taskCreate.sourceID` is required when calling `createTaskV1`.");if(!e.destinationID)throw new Error("Parameter `taskCreate.destinationID` is required when calling `createTaskV1`.");if(!e.trigger)throw new Error("Parameter `taskCreate.trigger` is required when calling `createTaskV1`.");if(!e.action)throw new Error("Parameter `taskCreate.action` is required when calling `createTaskV1`.");const i={method:"POST",path:"/1/tasks",queryParameters:{},headers:{},data:e};return s.request(i,t)},createTransformation(e,t){if(!e)throw new Error("Parameter `transformationCreate` is required when calling `createTransformation`.");if(!e.name)throw new Error("Parameter `transformationCreate.name` is required when calling `createTransformation`.");const i={method:"POST",path:"/1/transformations",queryParameters:{},headers:{},data:e};return s.request(i,t)},customDelete({path:e,parameters:t},a){if(!e)throw new Error("Parameter `path` is required when calling `customDelete`.");const h={method:"DELETE",path:"/{path}".replace("{path}",e),queryParameters:t||{},headers:{}};return s.request(h,a)},customGet({path:e,parameters:t},a){if(!e)throw new Error("Parameter `path` is required when calling `customGet`.");const h={method:"GET",path:"/{path}".replace("{path}",e),queryParameters:t||{},headers:{}};return s.request(h,a)},customPost({path:e,parameters:t,body:a},n){if(!e)throw new Error("Parameter `path` is required when calling `customPost`.");const d={method:"POST",path:"/{path}".replace("{path}",e),queryParameters:t||{},headers:{},data:a||{}};return s.request(d,n)},customPut({path:e,parameters:t,body:a},n){if(!e)throw new Error("Parameter `path` is required when calling `customPut`.");const d={method:"PUT",path:"/{path}".replace("{path}",e),queryParameters:t||{},headers:{},data:a||{}};return s.request(d,n)},deleteAuthentication({authenticationID:e},t){if(!e)throw new Error("Parameter `authenticationID` is required when calling `deleteAuthentication`.");const i={method:"DELETE",path:"/1/authentications/{authenticationID}".replace("{authenticationID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)},deleteDestination({destinationID:e},t){if(!e)throw new Error("Parameter `destinationID` is required when calling `deleteDestination`.");const i={method:"DELETE",path:"/1/destinations/{destinationID}".replace("{destinationID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)},deleteSource({sourceID:e},t){if(!e)throw new Error("Parameter `sourceID` is required when calling `deleteSource`.");const i={method:"DELETE",path:"/1/sources/{sourceID}".replace("{sourceID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)},deleteTask({taskID:e},t){if(!e)throw new Error("Parameter `taskID` is required when calling `deleteTask`.");const i={method:"DELETE",path:"/2/tasks/{taskID}".replace("{taskID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)},deleteTaskV1({taskID:e},t){if(!e)throw new Error("Parameter `taskID` is required when calling `deleteTaskV1`.");const i={method:"DELETE",path:"/1/tasks/{taskID}".replace("{taskID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)},deleteTransformation({transformationID:e},t){if(!e)throw new Error("Parameter `transformationID` is required when calling `deleteTransformation`.");const i={method:"DELETE",path:"/1/transformations/{transformationID}".replace("{transformationID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)},disableTask({taskID:e},t){if(!e)throw new Error("Parameter `taskID` is required when calling `disableTask`.");const i={method:"PUT",path:"/2/tasks/{taskID}/disable".replace("{taskID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)},disableTaskV1({taskID:e},t){if(!e)throw new Error("Parameter `taskID` is required when calling `disableTaskV1`.");const i={method:"PUT",path:"/1/tasks/{taskID}/disable".replace("{taskID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)},enableTask({taskID:e},t){if(!e)throw new Error("Parameter `taskID` is required when calling `enableTask`.");const i={method:"PUT",path:"/2/tasks/{taskID}/enable".replace("{taskID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)},enableTaskV1({taskID:e},t){if(!e)throw new Error("Parameter `taskID` is required when calling `enableTaskV1`.");const i={method:"PUT",path:"/1/tasks/{taskID}/enable".replace("{taskID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)},getAuthentication({authenticationID:e},t){if(!e)throw new Error("Parameter `authenticationID` is required when calling `getAuthentication`.");const i={method:"GET",path:"/1/authentications/{authenticationID}".replace("{authenticationID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)},getDestination({destinationID:e},t){if(!e)throw new Error("Parameter `destinationID` is required when calling `getDestination`.");const i={method:"GET",path:"/1/destinations/{destinationID}".replace("{destinationID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)},getEvent({runID:e,eventID:t},a){if(!e)throw new Error("Parameter `runID` is required when calling `getEvent`.");if(!t)throw new Error("Parameter `eventID` is required when calling `getEvent`.");const h={method:"GET",path:"/1/runs/{runID}/events/{eventID}".replace("{runID}",encodeURIComponent(e)).replace("{eventID}",encodeURIComponent(t)),queryParameters:{},headers:{}};return s.request(h,a)},getRun({runID:e},t){if(!e)throw new Error("Parameter `runID` is required when calling `getRun`.");const i={method:"GET",path:"/1/runs/{runID}".replace("{runID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)},getSource({sourceID:e},t){if(!e)throw new Error("Parameter `sourceID` is required when calling `getSource`.");const i={method:"GET",path:"/1/sources/{sourceID}".replace("{sourceID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)},getTask({taskID:e},t){if(!e)throw new Error("Parameter `taskID` is required when calling `getTask`.");const i={method:"GET",path:"/2/tasks/{taskID}".replace("{taskID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)},getTaskV1({taskID:e},t){if(!e)throw new Error("Parameter `taskID` is required when calling `getTaskV1`.");const i={method:"GET",path:"/1/tasks/{taskID}".replace("{taskID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)},getTransformation({transformationID:e},t){if(!e)throw new Error("Parameter `transformationID` is required when calling `getTransformation`.");const i={method:"GET",path:"/1/transformations/{transformationID}".replace("{transformationID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return s.request(i,t)},listAuthentications({itemsPerPage:e,page:t,type:a,platform:n,sort:c,order:i}={},h=void 0){const d="/1/authentications",f={},p={};e!==void 0&&(p.itemsPerPage=e.toString()),t!==void 0&&(p.page=t.toString()),a!==void 0&&(p.type=a.toString()),n!==void 0&&(p.platform=n.toString()),c!==void 0&&(p.sort=c.toString()),i!==void 0&&(p.order=i.toString());const P={method:"GET",path:d,queryParameters:p,headers:f};return s.request(P,h)},listDestinations({itemsPerPage:e,page:t,type:a,authenticationID:n,transformationID:c,sort:i,order:h}={},d=void 0){const f="/1/destinations",p={},P={};e!==void 0&&(P.itemsPerPage=e.toString()),t!==void 0&&(P.page=t.toString()),a!==void 0&&(P.type=a.toString()),n!==void 0&&(P.authenticationID=n.toString()),c!==void 0&&(P.transformationID=c.toString()),i!==void 0&&(P.sort=i.toString()),h!==void 0&&(P.order=h.toString());const y={method:"GET",path:f,queryParameters:P,headers:p};return s.request(y,d)},listEvents({runID:e,itemsPerPage:t,page:a,status:n,type:c,sort:i,order:h,startDate:d,endDate:f},p){if(!e)throw new Error("Parameter `runID` is required when calling `listEvents`.");const P="/1/runs/{runID}/events".replace("{runID}",encodeURIComponent(e)),y={},w={};t!==void 0&&(w.itemsPerPage=t.toString()),a!==void 0&&(w.page=a.toString()),n!==void 0&&(w.status=n.toString()),c!==void 0&&(w.type=c.toString()),i!==void 0&&(w.sort=i.toString()),h!==void 0&&(w.order=h.toString()),d!==void 0&&(w.startDate=d.toString()),f!==void 0&&(w.endDate=f.toString());const E={method:"GET",path:P,queryParameters:w,headers:y};return s.request(E,p)},listRuns({itemsPerPage:e,page:t,status:a,type:n,taskID:c,sort:i,order:h,startDate:d,endDate:f}={},p=void 0){const P="/1/runs",y={},w={};e!==void 0&&(w.itemsPerPage=e.toString()),t!==void 0&&(w.page=t.toString()),a!==void 0&&(w.status=a.toString()),n!==void 0&&(w.type=n.toString()),c!==void 0&&(w.taskID=c.toString()),i!==void 0&&(w.sort=i.toString()),h!==void 0&&(w.order=h.toString()),d!==void 0&&(w.startDate=d.toString()),f!==void 0&&(w.endDate=f.toString());const E={method:"GET",path:P,queryParameters:w,headers:y};return s.request(E,p)},listSources({itemsPerPage:e,page:t,type:a,authenticationID:n,sort:c,order:i}={},h=void 0){const d="/1/sources",f={},p={};e!==void 0&&(p.itemsPerPage=e.toString()),t!==void 0&&(p.page=t.toString()),a!==void 0&&(p.type=a.toString()),n!==void 0&&(p.authenticationID=n.toString()),c!==void 0&&(p.sort=c.toString()),i!==void 0&&(p.order=i.toString());const P={method:"GET",path:d,queryParameters:p,headers:f};return s.request(P,h)},listTasks({itemsPerPage:e,page:t,action:a,enabled:n,sourceID:c,sourceType:i,destinationID:h,triggerType:d,withEmailNotifications:f,sort:p,order:P}={},y=void 0){const w="/2/tasks",E={},b={};e!==void 0&&(b.itemsPerPage=e.toString()),t!==void 0&&(b.page=t.toString()),a!==void 0&&(b.action=a.toString()),n!==void 0&&(b.enabled=n.toString()),c!==void 0&&(b.sourceID=c.toString()),i!==void 0&&(b.sourceType=i.toString()),h!==void 0&&(b.destinationID=h.toString()),d!==void 0&&(b.triggerType=d.toString()),f!==void 0&&(b.withEmailNotifications=f.toString()),p!==void 0&&(b.sort=p.toString()),P!==void 0&&(b.order=P.toString());const $={method:"GET",path:w,queryParameters:b,headers:E};return s.request($,y)},listTasksV1({itemsPerPage:e,page:t,action:a,enabled:n,sourceID:c,destinationID:i,triggerType:h,sort:d,order:f}={},p=void 0){const P="/1/tasks",y={},w={};e!==void 0&&(w.itemsPerPage=e.toString()),t!==void 0&&(w.page=t.toString()),a!==void 0&&(w.action=a.toString()),n!==void 0&&(w.enabled=n.toString()),c!==void 0&&(w.sourceID=c.toString()),i!==void 0&&(w.destinationID=i.toString()),h!==void 0&&(w.triggerType=h.toString()),d!==void 0&&(w.sort=d.toString()),f!==void 0&&(w.order=f.toString());const E={method:"GET",path:P,queryParameters:w,headers:y};return s.request(E,p)},listTransformations({itemsPerPage:e,page:t,sort:a,order:n}={},c=void 0){const i="/1/transformations",h={},d={};e!==void 0&&(d.itemsPerPage=e.toString()),t!==void 0&&(d.page=t.toString()),a!==void 0&&(d.sort=a.toString()),n!==void 0&&(d.order=n.toString());const f={method:"GET",path:i,queryParameters:d,headers:h};return s.request(f,c)},push({indexName:e,pushTaskPayload:t,watch:a,referenceIndexName:n},c){if(!e)throw new Error("Parameter `indexName` is required when calling `push`.");if(!t)throw new Error("Parameter `pushTaskPayload` is required when calling `push`.");if(!t.action)throw new Error("Parameter `pushTaskPayload.action` is required when calling `push`.");if(!t.records)throw new Error("Parameter `pushTaskPayload.records` is required when calling `push`.");const i="/1/push/{indexName}".replace("{indexName}",encodeURIComponent(e)),h={},d={};a!==void 0&&(d.watch=a.toString()),n!==void 0&&(d.referenceIndexName=n.toString());const f={method:"POST",path:i,queryParameters:d,headers:h,data:t};return c={timeouts:{connect:18e4,read:18e4,write:18e4,...c?.timeouts}},s.request(f,c)},pushTask({taskID:e,pushTaskPayload:t,watch:a},n){if(!e)throw new Error("Parameter `taskID` is required when calling `pushTask`.");if(!t)throw new Error("Parameter `pushTaskPayload` is required when calling `pushTask`.");if(!t.action)throw new Error("Parameter `pushTaskPayload.action` is required when calling `pushTask`.");if(!t.records)throw new Error("Parameter `pushTaskPayload.records` is required when calling `pushTask`.");const c="/2/tasks/{taskID}/push".replace("{taskID}",encodeURIComponent(e)),i={},h={};a!==void 0&&(h.watch=a.toString());const d={method:"POST",path:c,queryParameters:h,headers:i,data:t};return n={timeouts:{connect:18e4,read:18e4,write:18e4,...n?.timeouts}},s.request(d,n)},runSource({sourceID:e,runSourcePayload:t},a){if(!e)throw new Error("Parameter `sourceID` is required when calling `runSource`.");const h={method:"POST",path:"/1/sources/{sourceID}/run".replace("{sourceID}",encodeURIComponent(e)),queryParameters:{},headers:{},data:t||{}};return s.request(h,a)},runTask({taskID:e,runTaskPayload:t},a){if(!e)throw new Error("Parameter `taskID` is required when calling `runTask`.");const h={method:"POST",path:"/2/tasks/{taskID}/run".replace("{taskID}",encodeURIComponent(e)),queryParameters:{},headers:{},data:t||{}};return s.request(h,a)},runTaskV1({taskID:e,runTaskPayload:t},a){if(!e)throw new Error("Parameter `taskID` is required when calling `runTaskV1`.");const h={method:"POST",path:"/1/tasks/{taskID}/run".replace("{taskID}",encodeURIComponent(e)),queryParameters:{},headers:{},data:t||{}};return s.request(h,a)},searchAuthentications(e,t){if(!e)throw new Error("Parameter `authenticationSearch` is required when calling `searchAuthentications`.");if(!e.authenticationIDs)throw new Error("Parameter `authenticationSearch.authenticationIDs` is required when calling `searchAuthentications`.");const i={method:"POST",path:"/1/authentications/search",queryParameters:{},headers:{},data:e};return s.request(i,t)},searchDestinations(e,t){if(!e)throw new Error("Parameter `destinationSearch` is required when calling `searchDestinations`.");if(!e.destinationIDs)throw new Error("Parameter `destinationSearch.destinationIDs` is required when calling `searchDestinations`.");const i={method:"POST",path:"/1/destinations/search",queryParameters:{},headers:{},data:e};return s.request(i,t)},searchSources(e,t){if(!e)throw new Error("Parameter `sourceSearch` is required when calling `searchSources`.");if(!e.sourceIDs)throw new Error("Parameter `sourceSearch.sourceIDs` is required when calling `searchSources`.");const i={method:"POST",path:"/1/sources/search",queryParameters:{},headers:{},data:e};return s.request(i,t)},searchTasks(e,t){if(!e)throw new Error("Parameter `taskSearch` is required when calling `searchTasks`.");if(!e.taskIDs)throw new Error("Parameter `taskSearch.taskIDs` is required when calling `searchTasks`.");const i={method:"POST",path:"/2/tasks/search",queryParameters:{},headers:{},data:e};return s.request(i,t)},searchTasksV1(e,t){if(!e)throw new Error("Parameter `taskSearch` is required when calling `searchTasksV1`.");if(!e.taskIDs)throw new Error("Parameter `taskSearch.taskIDs` is required when calling `searchTasksV1`.");const i={method:"POST",path:"/1/tasks/search",queryParameters:{},headers:{},data:e};return s.request(i,t)},searchTransformations(e,t){if(!e)throw new Error("Parameter `transformationSearch` is required when calling `searchTransformations`.");if(!e.transformationIDs)throw new Error("Parameter `transformationSearch.transformationIDs` is required when calling `searchTransformations`.");const i={method:"POST",path:"/1/transformations/search",queryParameters:{},headers:{},data:e};return s.request(i,t)},triggerDockerSourceDiscover({sourceID:e},t){if(!e)throw new Error("Parameter `sourceID` is required when calling `triggerDockerSourceDiscover`.");const i={method:"POST",path:"/1/sources/{sourceID}/discover".replace("{sourceID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t={timeouts:{connect:18e4,read:18e4,write:18e4,...t?.timeouts}},s.request(i,t)},tryTransformation(e,t){if(!e)throw new Error("Parameter `transformationTry` is required when calling `tryTransformation`.");if(!e.sampleRecord)throw new Error("Parameter `transformationTry.sampleRecord` is required when calling `tryTransformation`.");const i={method:"POST",path:"/1/transformations/try",queryParameters:{},headers:{},data:e};return s.request(i,t)},tryTransformationBeforeUpdate({transformationID:e,transformationTry:t},a){if(!e)throw new Error("Parameter `transformationID` is required when calling `tryTransformationBeforeUpdate`.");if(!t)throw new Error("Parameter `transformationTry` is required when calling `tryTransformationBeforeUpdate`.");if(!t.sampleRecord)throw new Error("Parameter `transformationTry.sampleRecord` is required when calling `tryTransformationBeforeUpdate`.");const h={method:"POST",path:"/1/transformations/{transformationID}/try".replace("{transformationID}",encodeURIComponent(e)),queryParameters:{},headers:{},data:t};return s.request(h,a)},updateAuthentication({authenticationID:e,authenticationUpdate:t},a){if(!e)throw new Error("Parameter `authenticationID` is required when calling `updateAuthentication`.");if(!t)throw new Error("Parameter `authenticationUpdate` is required when calling `updateAuthentication`.");const h={method:"PATCH",path:"/1/authentications/{authenticationID}".replace("{authenticationID}",encodeURIComponent(e)),queryParameters:{},headers:{},data:t};return s.request(h,a)},updateDestination({destinationID:e,destinationUpdate:t},a){if(!e)throw new Error("Parameter `destinationID` is required when calling `updateDestination`.");if(!t)throw new Error("Parameter `destinationUpdate` is required when calling `updateDestination`.");const h={method:"PATCH",path:"/1/destinations/{destinationID}".replace("{destinationID}",encodeURIComponent(e)),queryParameters:{},headers:{},data:t};return s.request(h,a)},updateSource({sourceID:e,sourceUpdate:t},a){if(!e)throw new Error("Parameter `sourceID` is required when calling `updateSource`.");if(!t)throw new Error("Parameter `sourceUpdate` is required when calling `updateSource`.");const h={method:"PATCH",path:"/1/sources/{sourceID}".replace("{sourceID}",encodeURIComponent(e)),queryParameters:{},headers:{},data:t};return s.request(h,a)},updateTask({taskID:e,taskUpdate:t},a){if(!e)throw new Error("Parameter `taskID` is required when calling `updateTask`.");if(!t)throw new Error("Parameter `taskUpdate` is required when calling `updateTask`.");const h={method:"PATCH",path:"/2/tasks/{taskID}".replace("{taskID}",encodeURIComponent(e)),queryParameters:{},headers:{},data:t};return s.request(h,a)},updateTaskV1({taskID:e,taskUpdate:t},a){if(!e)throw new Error("Parameter `taskID` is required when calling `updateTaskV1`.");if(!t)throw new Error("Parameter `taskUpdate` is required when calling `updateTaskV1`.");const h={method:"PATCH",path:"/1/tasks/{taskID}".replace("{taskID}",encodeURIComponent(e)),queryParameters:{},headers:{},data:t};return s.request(h,a)},updateTransformation({transformationID:e,transformationCreate:t},a){if(!e)throw new Error("Parameter `transformationID` is required when calling `updateTransformation`.");if(!t)throw new Error("Parameter `transformationCreate` is required when calling `updateTransformation`.");if(!t.name)throw new Error("Parameter `transformationCreate.name` is required when calling `updateTransformation`.");const h={method:"PUT",path:"/1/transformations/{transformationID}".replace("{transformationID}",encodeURIComponent(e)),queryParameters:{},headers:{},data:t};return s.request(h,a)},validateSource(e,t=void 0){const i={method:"POST",path:"/1/sources/validate",queryParameters:{},headers:{},data:e||{}};return t={timeouts:{connect:18e4,read:18e4,write:18e4,...t?.timeouts}},s.request(i,t)},validateSourceBeforeUpdate({sourceID:e,sourceUpdate:t},a){if(!e)throw new Error("Parameter `sourceID` is required when calling `validateSourceBeforeUpdate`.");if(!t)throw new Error("Parameter `sourceUpdate` is required when calling `validateSourceBeforeUpdate`.");const h={method:"POST",path:"/1/sources/{sourceID}/validate".replace("{sourceID}",encodeURIComponent(e)),queryParameters:{},headers:{},data:t};return a={timeouts:{connect:18e4,read:18e4,write:18e4,...a?.timeouts}},s.request(h,a)}}}function Q(u,r,o,l){if(!u||typeof u!="string")throw new Error("`appId` is missing.");if(!r||typeof r!="string")throw new Error("`apiKey` is missing.");if(!o||o&&(typeof o!="string"||!pe.includes(o)))throw new Error(`\`region\` is required and must be one of the following: ${pe.join(", ")}`);return Ot({appId:u,apiKey:r,region:o,timeouts:{connect:25e3,read:25e3,write:25e3},logger:N(),requester:R(),algoliaAgents:[{segment:"Browser"}],authMode:"WithinQueryParameters",responsesCache:S(),requestsCache:S({serializable:!1}),hostsCache:I({caches:[x({key:`${re}-${u}`}),S()]}),...l})}const $t=Object.freeze(Object.defineProperty({__proto__:null,apiClientVersion:re,ingestionClient:Q,isOnDemandTrigger:At,isScheduleTrigger:Ut,isSubscriptionTrigger:Nt},Symbol.toStringTag,{value:"Module"}));var se="1.34.1";function Lt(){return[{url:"status.algolia.com",accept:"readWrite",protocol:"https"}]}function Gt({appId:u,apiKey:r,authMode:o,algoliaAgents:l,...g}){const q=A(u,r,o),m=O({hosts:Lt(),...g,algoliaAgent:U({algoliaAgents:l,client:"Monitoring",version:se}),baseHeaders:{"content-type":"text/plain",...q.headers(),...g.baseHeaders},baseQueryParameters:{...q.queryParameters(),...g.baseQueryParameters}});return{transporter:m,appId:u,apiKey:r,clearCache(){return Promise.all([m.requestsCache.clear(),m.responsesCache.clear()]).then(()=>{})},get _ua(){return m.algoliaAgent.value},addAlgoliaAgent(s,e){m.algoliaAgent.add({segment:s,version:e})},setClientApiKey({apiKey:s}){!o||o==="WithinHeaders"?m.baseHeaders["x-algolia-api-key"]=s:m.baseQueryParameters["x-algolia-api-key"]=s},customDelete({path:s,parameters:e},t){if(!s)throw new Error("Parameter `path` is required when calling `customDelete`.");const i={method:"DELETE",path:"/{path}".replace("{path}",s),queryParameters:e||{},headers:{}};return m.request(i,t)},customGet({path:s,parameters:e},t){if(!s)throw new Error("Parameter `path` is required when calling `customGet`.");const i={method:"GET",path:"/{path}".replace("{path}",s),queryParameters:e||{},headers:{}};return m.request(i,t)},customPost({path:s,parameters:e,body:t},a){if(!s)throw new Error("Parameter `path` is required when calling `customPost`.");const h={method:"POST",path:"/{path}".replace("{path}",s),queryParameters:e||{},headers:{},data:t||{}};return m.request(h,a)},customPut({path:s,parameters:e,body:t},a){if(!s)throw new Error("Parameter `path` is required when calling `customPut`.");const h={method:"PUT",path:"/{path}".replace("{path}",s),queryParameters:e||{},headers:{},data:t||{}};return m.request(h,a)},getClusterIncidents({clusters:s},e){if(!s)throw new Error("Parameter `clusters` is required when calling `getClusterIncidents`.");const c={method:"GET",path:"/1/incidents/{clusters}".replace("{clusters}",encodeURIComponent(s)),queryParameters:{},headers:{}};return m.request(c,e)},getClusterStatus({clusters:s},e){if(!s)throw new Error("Parameter `clusters` is required when calling `getClusterStatus`.");const c={method:"GET",path:"/1/status/{clusters}".replace("{clusters}",encodeURIComponent(s)),queryParameters:{},headers:{}};return m.request(c,e)},getIncidents(s){const n={method:"GET",path:"/1/incidents",queryParameters:{},headers:{}};return m.request(n,s)},getIndexingTime({clusters:s},e){if(!s)throw new Error("Parameter `clusters` is required when calling `getIndexingTime`.");const c={method:"GET",path:"/1/indexing/{clusters}".replace("{clusters}",encodeURIComponent(s)),queryParameters:{},headers:{}};return m.request(c,e)},getLatency({clusters:s},e){if(!s)throw new Error("Parameter `clusters` is required when calling `getLatency`.");const c={method:"GET",path:"/1/latency/{clusters}".replace("{clusters}",encodeURIComponent(s)),queryParameters:{},headers:{}};return m.request(c,e)},getMetrics({metric:s,period:e},t){if(!s)throw new Error("Parameter `metric` is required when calling `getMetrics`.");if(!e)throw new Error("Parameter `period` is required when calling `getMetrics`.");const i={method:"GET",path:"/1/infrastructure/{metric}/period/{period}".replace("{metric}",encodeURIComponent(s)).replace("{period}",encodeURIComponent(e)),queryParameters:{},headers:{}};return m.request(i,t)},getReachability({clusters:s},e){if(!s)throw new Error("Parameter `clusters` is required when calling `getReachability`.");const c={method:"GET",path:"/1/reachability/{clusters}/probes".replace("{clusters}",encodeURIComponent(s)),queryParameters:{},headers:{}};return m.request(c,e)},getServers(s){const n={method:"GET",path:"/1/inventory/servers",queryParameters:{},headers:{}};return m.request(n,s)},getStatus(s){const n={method:"GET",path:"/1/status",queryParameters:{},headers:{}};return m.request(n,s)}}}function Re(u,r,o){if(!u||typeof u!="string")throw new Error("`appId` is missing.");if(!r||typeof r!="string")throw new Error("`apiKey` is missing.");return Gt({appId:u,apiKey:r,timeouts:{connect:1e3,read:2e3,write:3e4},logger:N(),requester:R(),algoliaAgents:[{segment:"Browser"}],authMode:"WithinQueryParameters",responsesCache:S(),requestsCache:S({serializable:!1}),hostsCache:I({caches:[x({key:`${se}-${u}`}),S()]}),...o})}const Ht=Object.freeze(Object.defineProperty({__proto__:null,apiClientVersion:se,monitoringClient:Re},Symbol.toStringTag,{value:"Module"}));var ae="5.34.1";function jt(u){return[{url:`${u}-dsn.algolia.net`,accept:"read",protocol:"https"},{url:`${u}.algolia.net`,accept:"write",protocol:"https"}].concat(Ee([{url:`${u}-1.algolianet.com`,accept:"readWrite",protocol:"https"},{url:`${u}-2.algolianet.com`,accept:"readWrite",protocol:"https"},{url:`${u}-3.algolianet.com`,accept:"readWrite",protocol:"https"}]))}function _t({appId:u,apiKey:r,authMode:o,algoliaAgents:l,...g}){const q=A(u,r,o),m=O({hosts:jt(u),...g,algoliaAgent:U({algoliaAgents:l,client:"Recommend",version:ae}),baseHeaders:{"content-type":"text/plain",...q.headers(),...g.baseHeaders},baseQueryParameters:{...q.queryParameters(),...g.baseQueryParameters}});return{transporter:m,appId:u,apiKey:r,clearCache(){return Promise.all([m.requestsCache.clear(),m.responsesCache.clear()]).then(()=>{})},get _ua(){return m.algoliaAgent.value},addAlgoliaAgent(s,e){m.algoliaAgent.add({segment:s,version:e})},setClientApiKey({apiKey:s}){!o||o==="WithinHeaders"?m.baseHeaders["x-algolia-api-key"]=s:m.baseQueryParameters["x-algolia-api-key"]=s},batchRecommendRules({indexName:s,model:e,recommendRule:t},a){if(!s)throw new Error("Parameter `indexName` is required when calling `batchRecommendRules`.");if(!e)throw new Error("Parameter `model` is required when calling `batchRecommendRules`.");const h={method:"POST",path:"/1/indexes/{indexName}/{model}/recommend/rules/batch".replace("{indexName}",encodeURIComponent(s)).replace("{model}",encodeURIComponent(e)),queryParameters:{},headers:{},data:t||{}};return m.request(h,a)},customDelete({path:s,parameters:e},t){if(!s)throw new Error("Parameter `path` is required when calling `customDelete`.");const i={method:"DELETE",path:"/{path}".replace("{path}",s),queryParameters:e||{},headers:{}};return m.request(i,t)},customGet({path:s,parameters:e},t){if(!s)throw new Error("Parameter `path` is required when calling `customGet`.");const i={method:"GET",path:"/{path}".replace("{path}",s),queryParameters:e||{},headers:{}};return m.request(i,t)},customPost({path:s,parameters:e,body:t},a){if(!s)throw new Error("Parameter `path` is required when calling `customPost`.");const h={method:"POST",path:"/{path}".replace("{path}",s),queryParameters:e||{},headers:{},data:t||{}};return m.request(h,a)},customPut({path:s,parameters:e,body:t},a){if(!s)throw new Error("Parameter `path` is required when calling `customPut`.");const h={method:"PUT",path:"/{path}".replace("{path}",s),queryParameters:e||{},headers:{},data:t||{}};return m.request(h,a)},deleteRecommendRule({indexName:s,model:e,objectID:t},a){if(!s)throw new Error("Parameter `indexName` is required when calling `deleteRecommendRule`.");if(!e)throw new Error("Parameter `model` is required when calling `deleteRecommendRule`.");if(!t)throw new Error("Parameter `objectID` is required when calling `deleteRecommendRule`.");const h={method:"DELETE",path:"/1/indexes/{indexName}/{model}/recommend/rules/{objectID}".replace("{indexName}",encodeURIComponent(s)).replace("{model}",encodeURIComponent(e)).replace("{objectID}",encodeURIComponent(t)),queryParameters:{},headers:{}};return m.request(h,a)},getRecommendRule({indexName:s,model:e,objectID:t},a){if(!s)throw new Error("Parameter `indexName` is required when calling `getRecommendRule`.");if(!e)throw new Error("Parameter `model` is required when calling `getRecommendRule`.");if(!t)throw new Error("Parameter `objectID` is required when calling `getRecommendRule`.");const h={method:"GET",path:"/1/indexes/{indexName}/{model}/recommend/rules/{objectID}".replace("{indexName}",encodeURIComponent(s)).replace("{model}",encodeURIComponent(e)).replace("{objectID}",encodeURIComponent(t)),queryParameters:{},headers:{}};return m.request(h,a)},getRecommendStatus({indexName:s,model:e,taskID:t},a){if(!s)throw new Error("Parameter `indexName` is required when calling `getRecommendStatus`.");if(!e)throw new Error("Parameter `model` is required when calling `getRecommendStatus`.");if(!t)throw new Error("Parameter `taskID` is required when calling `getRecommendStatus`.");const h={method:"GET",path:"/1/indexes/{indexName}/{model}/task/{taskID}".replace("{indexName}",encodeURIComponent(s)).replace("{model}",encodeURIComponent(e)).replace("{taskID}",encodeURIComponent(t)),queryParameters:{},headers:{}};return m.request(h,a)},getRecommendations(s,e){if(s&&Array.isArray(s)&&(s={requests:s}),!s)throw new Error("Parameter `getRecommendationsParams` is required when calling `getRecommendations`.");if(!s.requests)throw new Error("Parameter `getRecommendationsParams.requests` is required when calling `getRecommendations`.");const c={method:"POST",path:"/1/indexes/*/recommendations",queryParameters:{},headers:{},data:s,useReadTransporter:!0,cacheable:!0};return m.request(c,e)},searchRecommendRules({indexName:s,model:e,searchRecommendRulesParams:t},a){if(!s)throw new Error("Parameter `indexName` is required when calling `searchRecommendRules`.");if(!e)throw new Error("Parameter `model` is required when calling `searchRecommendRules`.");const h={method:"POST",path:"/1/indexes/{indexName}/{model}/recommend/rules/search".replace("{indexName}",encodeURIComponent(s)).replace("{model}",encodeURIComponent(e)),queryParameters:{},headers:{},data:t||{},useReadTransporter:!0,cacheable:!0};return m.request(h,a)}}}function xe(u,r,o){if(!u||typeof u!="string")throw new Error("`appId` is missing.");if(!r||typeof r!="string")throw new Error("`apiKey` is missing.");return _t({appId:u,apiKey:r,timeouts:{connect:1e3,read:2e3,write:3e4},logger:N(),requester:R(),algoliaAgents:[{segment:"Browser"}],authMode:"WithinQueryParameters",responsesCache:S(),requestsCache:S({serializable:!1}),hostsCache:I({caches:[x({key:`${ae}-${u}`}),S()]}),...o})}const Mt=Object.freeze(Object.defineProperty({__proto__:null,apiClientVersion:ae,recommendClient:xe},Symbol.toStringTag,{value:"Module"}));var Ae=Object.defineProperty,Bt=Object.getOwnPropertyDescriptor,Kt=Object.getOwnPropertyNames,Ft=Object.prototype.hasOwnProperty,Ue=(u,r)=>{for(var o in r)Ae(u,o,{get:r[o],enumerable:!0})},Wt=(u,r,o,l)=>{if(r&&typeof r=="object"||typeof r=="function")for(let g of Kt(r))!Ft.call(u,g)&&g!==o&&Ae(u,g,{get:()=>r[g],enumerable:!(l=Bt(r,g))||l.enumerable});return u},D=(u,r,o)=>(Wt(u,r,"default"),o),Ne={};Ue(Ne,{algoliasearch:()=>V,apiClientVersion:()=>M});var k={};Ue(k,{apiClientVersion:()=>M});D(k,qt);D(k,Pt);D(k,vt);D(k,bt);D(k,It);D(k,Rt);D(k,$t);D(k,Ht);D(k,Mt);D(Ne,k);function V(u,r,o){if(!u||typeof u!="string")throw new Error("`appId` is missing.");if(!r||typeof r!="string")throw new Error("`apiKey` is missing.");const l=De(u,r,o);let g;if(o?.transformation){if(!o.transformation.region)throw new Error("`region` must be provided when leveraging the transformation pipeline");g=Q(u,r,o.transformation.region,o)}return{...l,async saveObjectsWithTransformation({indexName:q,objects:m,waitForTasks:s},e){if(!g)throw new Error("`transformation.region` must be provided at client instantiation before calling this method.");if(!o?.transformation?.region)throw new Error("`region` must be provided when leveraging the transformation pipeline");return g.chunkedPush({indexName:q,objects:m,action:"addObject",waitForTasks:s},e)},async partialUpdateObjectsWithTransformation({indexName:q,objects:m,createIfNotExists:s,waitForTasks:e},t){if(!g)throw new Error("`transformation.region` must be provided at client instantiation before calling this method.");if(!o?.transformation?.region)throw new Error("`region` must be provided when leveraging the transformation pipeline");return g.chunkedPush({indexName:q,objects:m,action:s?"partialUpdateObject":"partialUpdateObjectNoCreate",waitForTasks:e},t)},async replaceAllObjectsWithTransformation({indexName:q,objects:m,batchSize:s,scopes:e},t){if(!g)throw new Error("`transformation.region` must be provided at client instantiation before calling this method.");if(!o?.transformation?.region)throw new Error("`region` must be provided when leveraging the transformation pipeline");const a=Math.floor(Math.random()*1e6)+1e5,n=`${q}_tmp_${a}`;e===void 0&&(e=["settings","rules","synonyms"]);try{let c=await this.operationIndex({indexName:q,operationIndexParams:{operation:"copy",destination:n,scope:e}},t);const i=await g.chunkedPush({indexName:n,objects:m,waitForTasks:!0,batchSize:s,referenceIndexName:q},t);await this.waitForTask({indexName:n,taskID:c.taskID}),c=await this.operationIndex({indexName:q,operationIndexParams:{operation:"copy",destination:n,scope:e}},t),await this.waitForTask({indexName:n,taskID:c.taskID});const h=await this.operationIndex({indexName:n,operationIndexParams:{operation:"move",destination:q}},t);return await this.waitForTask({indexName:n,taskID:h.taskID}),{copyOperationResponse:c,watchResponses:i,moveOperationResponse:h}}catch(c){throw await this.deleteIndex({indexName:n}),c}},get _ua(){return l.transporter.algoliaAgent.value},initAbtesting:q=>be(q.appId||u,q.apiKey||r,q.region,q.options),initAnalytics:q=>Ce(q.appId||u,q.apiKey||r,q.region,q.options),initIngestion:q=>Q(q.appId||u,q.apiKey||r,q.region,q.options),initInsights:q=>Te(q.appId||u,q.apiKey||r,q.region,q.options),initMonitoring:(q={})=>Re(q.appId||u,q.apiKey||r,q.options),initPersonalization:q=>Ie(q.appId||u,q.apiKey||r,q.region,q.options),initQuerySuggestions:q=>ke(q.appId||u,q.apiKey||r,q.region,q.options),initRecommend:(q={})=>xe(q.appId||u,q.apiKey||r,q.options)}}const zt={maxRetries:3,baseDelay:1e3,maxDelay:5e3,backoffMultiplier:2},Qt={hitsPerPage:8,timeout:5e3,debounceMs:300,attributesToRetrieve:["title","section","contents","url","type","category"],attributesToSnippet:["contents:20"],highlighting:{preTag:"<mark class='bg-amber-100 dark:bg-amber-900 text-amber-800 dark:text-amber-100 px-1 py-0.5 rounded font-semibold'>",postTag:"</mark>"}},Vt={maxEntries:50,defaultTTL:5*60*1e3,enabled:!0};class Jt{client;config;cache=new Map;cacheConfig;retryConfig;abortController=null;eventListeners=new Map;currentState="idle";constructor(r,o,l){this.config={...Qt,...r},this.cacheConfig={...Vt,...o},this.retryConfig={...zt,...l},this.client=V(r.appId,r.apiKey)}addEventListener(r,o){this.eventListeners.has(r)||this.eventListeners.set(r,[]),this.eventListeners.get(r).push(o)}removeEventListener(r,o){const l=this.eventListeners.get(r);if(l){const g=l.indexOf(o);g>-1&&l.splice(g,1)}}emitEvent(r,o){const l=this.eventListeners.get(r);l&&l.forEach(g=>{try{g(o)}catch(q){console.error(`Error in search event handler for ${r}:`,q)}})}setState(r,o,l){const g=this.currentState;this.currentState=r,this.emitEvent("stateChange",{query:o,timestamp:Date.now(),data:{previousState:g,currentState:r,...l}})}getState(){return this.currentState}async search(r,o=[],l=[]){if(console.log({query:r,filters:o,optionalFilters:l}),!r||typeof r!="string")return this.createEmptyResult(r,"empty");const g=r.trim();if(!g)return this.createEmptyResult(r,"empty");this.emitEvent("search:start",{query:g,timestamp:Date.now(),data:{filters:o,optionalFilters:l}}),this.setState("loading",g);const q=this.getCacheKey(g,o,l);if(this.cacheConfig.enabled){const s=this.getFromCache(q);if(s)return this.setState("success",g,{fromCache:!0}),this.emitEvent("search:results",{query:g,results:s.results,timestamp:Date.now(),data:{fromCache:!0}}),s.results}this.abortController&&this.abortController.abort(),this.abortController=new AbortController;const m=this.abortController;return this.searchWithRetry(g,o,l,m,0)}async searchWithRetry(r,o,l,g,q){try{const m=Date.now(),s={indexName:this.config.indexName,query:r,hitsPerPage:this.config.hitsPerPage,attributesToRetrieve:this.config.attributesToRetrieve,attributesToSnippet:this.config.attributesToSnippet,highlightPreTag:this.config.highlighting.preTag,highlightPostTag:this.config.highlighting.postTag};o.length>0&&(s.filters=o.join(" AND ")),l.length>0&&(s.optionalFilters=l);const{results:e}=await this.client.searchForHits({requests:[s]});if(g.signal.aborted)throw new Error("Search aborted");const t=Date.now()-m,a=e[0].hits,n={hits:a,metadata:{hitsCount:a.length,processingTimeMS:t,query:r,filters:o,timestamp:Date.now()},state:a.length>0?"success":"empty"};return this.cacheConfig.enabled&&this.setCache(this.getCacheKey(r,o,l),n),this.setState(n.state,r,{attempt:q+1}),this.emitEvent("search:results",{query:r,results:n,timestamp:Date.now(),data:{attempt:q+1}}),n}catch(m){if(g.signal.aborted)return this.createEmptyResult(r,"idle");if(this.shouldRetryError(m)&&q<this.retryConfig.maxRetries){const a=Math.min(this.retryConfig.baseDelay*Math.pow(this.retryConfig.backoffMultiplier,q),this.retryConfig.maxDelay);if(this.emitEvent("search:retry",{query:r,timestamp:Date.now(),data:{attempt:q+1,maxRetries:this.retryConfig.maxRetries,delay:a,error:m instanceof Error?m.message:"Unknown error"}}),await new Promise(n=>setTimeout(n,a)),!g.signal.aborted)return this.searchWithRetry(r,o,l,g,q+1)}console.error("Search error:",m);const e={message:m instanceof Error?m.message:"Unknown search error",code:this.getErrorCode(m),originalError:m instanceof Error?m:void 0,retryable:this.isRetryableError(m)},t={hits:[],metadata:{hitsCount:0,processingTimeMS:0,query:r,filters:o,timestamp:Date.now()},state:"error",error:e};return this.setState("error",r,{error:e,attempt:q+1}),this.emitEvent("search:error",{query:r,results:t,timestamp:Date.now(),data:{error:e,attempt:q+1}}),t}}shouldRetryError(r){return!!(r instanceof Error&&(r.message.includes("network")||r.message.includes("timeout")||r.message.includes("rate limit")||r.message.includes("429")||r.message.includes("500")||r.message.includes("502")||r.message.includes("503")||r.message.includes("504")))}cancelSearch(){this.abortController&&(this.abortController.abort(),this.abortController=null)}clearCache(){this.cache.clear()}updateConfig(r){this.config={...this.config,...r},(r.appId||r.apiKey)&&(this.client=V(this.config.appId,this.config.apiKey))}getCacheStats(){return{size:this.cache.size,maxSize:this.cacheConfig.maxEntries,hitRate:0}}createEmptyResult(r,o){return{hits:[],metadata:{hitsCount:0,processingTimeMS:0,query:r,filters:[],timestamp:Date.now()},state:o}}getCacheKey(r,o,l=[]){const g=o.sort().join(","),q=l.sort().join(",");return`${r}|${g}|${q}`}getFromCache(r){const o=this.cache.get(r);return o?Date.now()-o.timestamp>o.ttl?(this.cache.delete(r),null):o:null}setCache(r,o){if(this.cache.size>=this.cacheConfig.maxEntries){const g=this.cache.keys().next().value;g&&this.cache.delete(g)}const l={results:o,timestamp:Date.now(),ttl:this.cacheConfig.defaultTTL};this.cache.set(r,l)}getErrorCode(r){if(r&&typeof r=="object"&&"code"in r)return String(r.code)}isRetryableError(r){if(r instanceof Error){if(r.message.includes("network")||r.message.includes("timeout"))return!0;if(r.name==="AbortError"||r.message.includes("aborted"))return!1}return!1}}const Zt={enabled:!0,selectKey:"Enter",upKey:"ArrowUp",downKey:"ArrowDown",escapeKey:"Escape"};class Yt{listeners=new Map;on(r,o){this.listeners.has(r)||this.listeners.set(r,[]),this.listeners.get(r).push(o)}off(r,o){const l=this.listeners.get(r);if(l){const g=l.indexOf(o);g>-1&&l.splice(g,1)}}emit(r,o){const l=this.listeners.get(r);l&&l.forEach(g=>{try{g(o)}catch(q){console.error(`Error in search event handler for ${r}:`,q)}})}clear(){this.listeners.clear()}listenerCount(r){return this.listeners.get(r)?.length||0}}class Xt{config;currentIndex=-1;maxIndex=0;onSelectCallback;constructor(r={},o){this.config={...Zt,...r},this.onSelectCallback=o}handleKeyboard(r,o){if(!this.config.enabled||o===0)return!1;switch(this.maxIndex=o-1,r.key){case this.config.downKey:return r.preventDefault(),this.navigateDown(),!0;case this.config.upKey:return r.preventDefault(),this.navigateUp(),!0;case this.config.selectKey:if(this.currentIndex>=0)return r.preventDefault(),this.selectCurrent(),!0;break;case this.config.escapeKey:return r.preventDefault(),this.reset(),!0}return!1}navigateDown(){this.currentIndex=Math.min(this.currentIndex+1,this.maxIndex),this.updateHighlight()}navigateUp(){this.currentIndex=Math.max(this.currentIndex-1,-1),this.updateHighlight()}selectCurrent(){this.currentIndex>=0&&this.onSelectCallback&&this.onSelectCallback(this.currentIndex)}updateHighlight(){if(document.querySelectorAll(".search-result-item.highlighted").forEach(r=>{r.classList.remove("highlighted")}),this.currentIndex>=0){const r=document.querySelector(`.search-result-item[data-index="${this.currentIndex}"]`);r&&(r.classList.add("highlighted"),r.scrollIntoView({block:"nearest",behavior:"smooth"}))}}reset(){this.currentIndex=-1,this.updateHighlight()}getCurrentIndex(){return this.currentIndex}setCurrentIndex(r){this.currentIndex=Math.max(-1,Math.min(r,this.maxIndex)),this.updateHighlight()}updateConfig(r){this.config={...this.config,...r}}}class er{element;callback;isActive=!1;constructor(r,o){this.element=r,this.callback=o}activate(){this.isActive||(document.addEventListener("click",this.handleClick),this.isActive=!0)}deactivate(){this.isActive&&(document.removeEventListener("click",this.handleClick),this.isActive=!1)}handleClick=r=>{const o=r.target;this.element.contains(o)||this.callback()};updateElement(r){this.element=r}isActivated(){return this.isActive}}class tr{timeout=null;callback;delay;constructor(r,o=300){this.callback=r,this.delay=o}handleInput(r){this.timeout&&clearTimeout(this.timeout),this.timeout=setTimeout(()=>{this.callback(r)},this.delay)}executeImmediately(r){this.timeout&&(clearTimeout(this.timeout),this.timeout=null),this.callback(r)}cancel(){this.timeout&&(clearTimeout(this.timeout),this.timeout=null)}updateDelay(r){this.delay=r}hasPendingCallback(){return this.timeout!==null}}class rr{listeners=new Map;on(r,o){this.listeners.has(r)||this.listeners.set(r,[]),this.listeners.get(r).push(o)}off(r,o){const l=this.listeners.get(r);if(l){const g=l.indexOf(o);g>-1&&l.splice(g,1)}}emit(r,o){const l=this.listeners.get(r);l&&l.forEach(g=>{try{g(o)}catch(q){console.error(`Error in state manager event handler for ${String(r)}:`,q)}})}clear(){this.listeners.clear()}}class sr{config;eventEmitter;keyboardHandler;inputHandler;clickOutsideHandler;currentQuery="";currentResults=null;isActive=!1;constructor(r){this.config={debounceMs:300,enableKeyboardNavigation:!0,...r},this.eventEmitter=new rr,this.keyboardHandler=new Xt({enabled:this.config.enableKeyboardNavigation},this.handleResultSelection.bind(this)),this.inputHandler=new tr(this.handleSearch.bind(this),this.config.debounceMs),this.clickOutsideHandler=new er(this.config.searchInput,this.handleClickOutside.bind(this)),this.setupEventListeners()}initialize(){this.isActive||(this.isActive=!0,this.clickOutsideHandler.activate(),this.config.searchService.addEventListener("search:start",this.handleSearchStart.bind(this)),this.config.searchService.addEventListener("search:results",this.handleSearchResults.bind(this)),this.config.searchService.addEventListener("search:error",this.handleSearchError.bind(this)),this.config.searchService.addEventListener("search:retry",this.handleSearchRetry.bind(this)),this.config.searchService.addEventListener("stateChange",this.handleStateChange.bind(this)),this.eventEmitter.emit("manager:initialized",{query:this.currentQuery,timestamp:Date.now(),data:{state:this.config.searchService.getState()}}))}destroy(){this.isActive&&(this.isActive=!1,this.clickOutsideHandler.deactivate(),this.inputHandler.cancel(),this.keyboardHandler.reset(),this.eventEmitter.clear(),this.config.searchService.cancelSearch(),this.eventEmitter.emit("manager:destroyed",{query:this.currentQuery,timestamp:Date.now(),data:{}}))}async search(r,o=[]){if(this.currentQuery=r,!r.trim()){this.hideResults();return}try{const l=await this.config.searchService.search(r,o);this.currentResults=l}catch(l){console.error("Search failed:",l)}}showResults(){this.currentResults&&(this.config.resultsContainer.classList.remove("hidden"),this.eventEmitter.emit("results:show",{query:this.currentQuery,results:this.currentResults,timestamp:Date.now(),data:{}}))}hideResults(){this.config.resultsContainer.classList.add("hidden"),this.keyboardHandler.reset(),this.eventEmitter.emit("results:hide",{query:this.currentQuery,timestamp:Date.now(),data:{}})}getCurrentResults(){return this.currentResults}getCurrentQuery(){return this.currentQuery}addEventListener(r,o){this.eventEmitter.on(r,o)}removeEventListener(r,o){this.eventEmitter.off(r,o)}setupEventListeners(){this.config.searchInput.addEventListener("input",r=>{const o=r.target.value;this.inputHandler.handleInput(o)}),this.config.searchInput.addEventListener("focus",()=>{this.currentQuery.trim()&&this.currentResults&&this.showResults()}),document.addEventListener("keydown",r=>{this.isActive&&this.currentResults&&(this.keyboardHandler.handleKeyboard(r,this.currentResults.hits.length),r.key==="Escape"&&this.hideResults())})}async handleSearch(r){await this.search(r)}handleResultSelection(r){if(this.currentResults&&this.currentResults.hits[r]){const o=this.currentResults.hits[r];this.config.onResultSelect&&this.config.onResultSelect(o,r),this.eventEmitter.emit("result:select",{query:this.currentQuery,timestamp:Date.now(),data:{selectedHit:o,index:r}}),o.url&&(window.location.href=o.url)}}handleClickOutside(){this.hideResults()}handleSearchStart(r){this.eventEmitter.emit("search:start",r)}handleSearchResults(r){this.currentResults=r.results||null,this.showResults(),this.eventEmitter.emit("search:results",r)}handleSearchError(r){this.eventEmitter.emit("search:error",r)}handleSearchRetry(r){this.eventEmitter.emit("search:retry",r)}handleStateChange(r){this.config.onStateChange&&this.config.onStateChange(r.data?.currentState,r.query,r.data),this.eventEmitter.emit("state:change",r)}}var v=(u=>(u.NUTRIENT="nutrient",u.SDK="sdk",u.LOW_CODE="low-code",u.WORKFLOW="workflow",u.CLOUD="cloud",u))(v||{});const ar=[{items:[{name:"web",label:"Web",lob:v.SDK},{name:"document-authoring",label:"Document Authoring",lob:v.SDK},{name:"ios",label:"iOS",lob:v.SDK},{name:"android",label:"Android",lob:v.SDK},{name:"mac-catalyst",overviewGuide:"ios/catalyst",gettingStartedGuide:"/getting-started/mac-catalyst/?project=new-project&package-manager=swiftpm",label:"Mac Catalyst",lob:v.SDK},{name:"document-engine",label:"Document Engine",lob:v.SDK},{name:"ai-assistant",label:"AI Assistant",lob:v.SDK},{name:"nodejs",label:"Node.js",lob:v.SDK},{name:"visionos",overviewGuide:"ios/visionos",gettingStartedGuide:"/getting-started/visionos/?project=new-project&package-manager=manual-integration",label:"VR and Spatial",lob:v.SDK},{name:"xtractflow",gettingStartedGuide:"/sdk/ai-document-processing/getting-started/",label:"AI Document Processing",lob:v.SDK},{name:"document-converter",label:"Document Converter",lob:v.LOW_CODE},{name:"document-editor",label:"Document Editor",lob:v.LOW_CODE},{name:"document-searchability",label:"Document Searchability",lob:v.LOW_CODE},{name:"document-automation-server",label:"Document Automation Server",lob:v.LOW_CODE},{name:"workflow-automation",label:"Workflow Automation",lob:v.WORKFLOW}]},{label:"Cross-Platform Tech",items:[{name:"react-native",label:"React Native",lob:v.SDK},{name:"flutter",label:"Flutter",lob:v.SDK},{name:"electron",overviewGuide:"web/electron",gettingStartedGuide:"/sdk/web/getting-started/electron/",label:"Electron",lob:v.SDK},{name:"maui",label:"MAUI",lob:v.SDK},{name:"dotnet-for-ios",label:".NET for iOS",lob:v.SDK},{name:"dotnet-for-android",label:".NET for Android",lob:v.SDK}]},{label:"Frameworks",items:[{name:"dotnet",label:".NET",lob:v.SDK},{name:"java",label:"Java",lob:v.SDK}]},{label:"Web Integrations",items:[{name:"salesforce",overviewGuide:"web/salesforce",gettingStartedGuide:"/getting-started/web-integrations/?product=salesforce&project=existing-project",label:"Salesforce",lob:v.SDK},{name:"sharepoint",overviewGuide:"web/sharepoint",gettingStartedGuide:"/getting-started/web-integrations/?product=sharepoint&project=existing-project",label:"SharePoint",lob:v.SDK},{name:"teams",overviewGuide:"web/teams",gettingStartedGuide:"/getting-started/web-integrations/?product=teams",label:"Microsoft Teams",lob:v.SDK},{name:"onedrive",overviewGuide:"web/onedrive",gettingStartedGuide:"/getting-started/web-integrations/?product=onedrive",label:"OneDrive",lob:v.SDK}]},{label:"Deprecated",isHidden:!0,items:[{name:"cordova",overviewGuide:"ios/cordova",label:"Cordova",lob:v.SDK},{name:"ionic",overviewGuide:"ios/ionic",label:"Ionic",lob:v.SDK},{name:"processor",label:"Processor",lob:v.SDK},{name:"server",overviewGuide:"web/pspdfkit-server/get-started/",label:"Web Server-Backed",lob:v.SDK},{name:"uwp",label:"UWP",overviewGuide:"windows",lob:v.SDK},{name:"xamarin-ios",overviewGuide:"ios/xamarin",label:"Xamarin.iOS",lob:v.SDK},{name:"xamarin-android",overviewGuide:"android/xamarin",label:"Xamarin.Android",lob:v.SDK}]}];function nr(){return ar.filter(u=>!u.isHidden).flatMap(u=>u.items)}function ir(){return nr().reduce((r,o)=>(r[o.name]=o.label,r),{})}const J=[{type:"guides",patterns:["/guides/"],priority:3,label:"Guides"},{type:"blog",patterns:["/blog/"],priority:3,label:"Blog"},{type:"getting-started",patterns:["/sdk/","/getting-started/","getting-started/"],priority:3,label:"Getting Started"},{type:"website",patterns:["/"],priority:1,label:"Website"}],C={highest:4,high:3,medium:2,low:1};function or(u){const r=u.toLowerCase().trim();for(const o of J)if(o.type!=="website"){for(const l of o.patterns)if(r.startsWith(l))return o.type}return"website"}function cr(u,r,o=!1){if(!u)return[];const l=[];switch(u){case"guides":if(r){const g=Pe(r);g&&l.push(`platform:${g}<score=${C.highest}>`)}l.push(`type:guides<score=${C.high}>`),l.push(`type:getting-started<score=${C.medium}>`),l.push(`type:blog<score=${C.low}>`),l.push(`type:website<score=${C.low}>`);break;case"getting-started":if(r){const g=Pe(r);g&&l.push(`platform:${g}<score=${C.highest}>`)}l.push(`type:getting-started<score=${C.high}>`),l.push(`type:guides<score=${C.medium}>`),l.push(`type:blog<score=${C.low}>`),l.push(`type:website<score=${C.low}>`);break;case"blog":l.push(`type:blog<score=${C.highest}>`),l.push(`type:guides<score=${C.high}>`),l.push(`type:getting-started<score=${C.medium}>`),l.push(`type:website<score=${C.low}>`);break;case"website":l.push(`type:website<score=${C.highest}>`),l.push(`type:guides<score=${C.high}>`),l.push(`type:getting-started<score=${C.medium}>`),l.push(`type:blog<score=${C.low}>`);break}return l}function ur(u){return u.length===0?"":u.map(o=>`type:${o}`).join(" OR ")}const hr=ir();function Pe(u){const r=u.toLowerCase().trim();if(!r.startsWith("/guides/")&&!r.startsWith("/sdk/")&&!r.startsWith("/getting-started/"))return null;const o=r.split("/").filter(Boolean);if(o.length>=2&&(o[0]==="guides"||o[0]==="sdk"||o[0]==="getting-started")){const l=o[1];return hr[l]||null}return null}class lr{container;selectedSections;onChange;filterElements=new Map;isExpanded=!1;toggleButton=null;filterContent=null;constructor(r){const o=document.getElementById(r.containerId);if(!o)throw new Error(`Container with id "${r.containerId}" not found`);this.container=o,this.selectedSections=new Set(r.selectedSections||[]),this.onChange=r.onChange,this.render(r.className),this.attachEventListeners()}render(r){const o=this.selectedSections.size,l=document.createElement("div");l.className=`algolia-section-filter ${r||""}`,l.setAttribute("role","region"),l.setAttribute("aria-label","Search filters"),l.innerHTML=`
      <button class="filter-toggle" aria-expanded="false" aria-controls="filter-content">
        <div class="filter-toggle-content">
          <div class="filter-toggle-left">
            <svg class="filter-toggle-icon" width="16" height="16" viewBox="0 0 16 16" fill="currentColor" aria-hidden="true">
              <path d="M1.5 3a.5.5 0 0 1 .5-.5h12a.5.5 0 0 1 0 1H2a.5.5 0 0 1-.5-.5zm0 5a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 0 1H2a.5.5 0 0 1-.5-.5zm0 5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1H2a.5.5 0 0 1-.5-.5z"/>
            </svg>
            <span class="filter-toggle-label">Filter by section</span>
            ${o>0?`<span class="filter-count">${o}</span>`:""}
          </div>
          <svg class="filter-toggle-chevron" width="12" height="12" viewBox="0 0 12 12" fill="currentColor" aria-hidden="true">
            <path d="M2.646 4.646a.5.5 0 0 1 .708 0L6 7.293l2.646-2.647a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 0 1 0-.708z"/>
          </svg>
        </div>
      </button>
      
      <div id="filter-content" class="filter-content" aria-hidden="true">
        <div class="filter-content-inner">
          <div class="filter-content-header">
            <span class="filter-content-title">Filter results by section</span>
            <button class="filter-clear" aria-label="Clear all filters" ${o===0?'style="visibility: hidden;"':""}>
              Clear all${o>0?` (${o})`:""}
            </button>
          </div>
          <div class="filter-options" role="group" aria-label="Section filters">
            ${J.map(g=>`
              <label class="filter-option" data-section="${g.type}">
                <input 
                  type="checkbox" 
                  value="${g.type}"
                  ${this.selectedSections.has(g.type)?"checked":""}
                  aria-label="Filter by ${g.label}"
                  aria-describedby="filter-desc-${g.type}"
                />
                <span class="filter-checkbox" aria-hidden="true"></span>
                <span class="filter-label">${g.label}</span>
              </label>
            `).join("")}
          </div>
        </div>
      </div>
    `,this.container.appendChild(l),this.toggleButton=l.querySelector(".filter-toggle"),this.filterContent=l.querySelector(".filter-content"),J.forEach(g=>{const q=l.querySelector(`[data-section="${g.type}"]`);q&&this.filterElements.set(g.type,q)})}attachEventListeners(){this.toggleButton&&this.toggleButton.addEventListener("click",r=>{r.preventDefault(),this.toggleExpanded()}),this.container.addEventListener("change",r=>{const o=r.target;if(o.type==="checkbox"){const l=o.value;o.checked?this.selectedSections.add(l):this.selectedSections.delete(l),this.updateUI(),this.notifyChange()}}),this.container.addEventListener("click",r=>{const o=r.target;(o.classList.contains("filter-clear")||o.closest(".filter-clear"))&&(r.preventDefault(),this.clearAll())}),this.container.addEventListener("keydown",r=>{r.key==="Escape"&&this.isExpanded&&(this.toggleExpanded(),this.toggleButton?.focus())})}notifyChange(){this.onChange&&this.onChange(Array.from(this.selectedSections))}getSelectedSections(){return Array.from(this.selectedSections)}setSelectedSections(r){this.selectedSections=new Set(r),this.updateUI(),this.notifyChange()}clearAll(){this.selectedSections.clear(),this.updateUI(),this.notifyChange()}toggleExpanded(){this.isExpanded=!this.isExpanded,this.toggleButton&&this.filterContent&&(this.toggleButton.setAttribute("aria-expanded",this.isExpanded.toString()),this.filterContent.setAttribute("aria-hidden",(!this.isExpanded).toString()),this.isExpanded?(this.filterContent.classList.add("filter-content-expanded"),this.toggleButton.classList.add("filter-toggle-expanded")):(this.filterContent.classList.remove("filter-content-expanded"),this.toggleButton.classList.remove("filter-toggle-expanded")))}updateUI(){this.filterElements.forEach((g,q)=>{const m=g.querySelector('input[type="checkbox"]');m&&(m.checked=this.selectedSections.has(q))});const r=this.selectedSections.size,o=this.container.querySelector(".filter-toggle-left");if(o){const g=o.querySelector(".filter-count");if(r>0)if(g)g.textContent=r.toString();else{const q=document.createElement("span");q.className="filter-count",q.textContent=r.toString(),o.appendChild(q)}else g&&g.remove()}const l=this.container.querySelector(".filter-clear");l&&(r>0?(l.textContent=`Clear all (${r})`,l.style.visibility="visible"):(l.textContent="Clear all",l.style.visibility="hidden"))}setVisible(r){const o=this.container.querySelector(".algolia-section-filter");o&&(o.style.display=r?"block":"none")}destroy(){this.container.innerHTML="",this.filterElements.clear(),this.selectedSections.clear()}}function dr(u){return new lr(u)}const mr={showMetadata:!0,showCount:!0,showPoweredBy:!0};function gr(u,r=!1){return u instanceof Error?{message:u.message,originalError:u,retryable:r}:{message:"Unknown search error",originalError:new Error("Unknown search error"),retryable:r}}class qr{searchService;stateManager;eventEmitter;searchInput;resultsContainer;componentContainer;filterContainer;currentQuery="";currentResults=null;searchTimeout=null;componentId;filters;currentHighlightIndex=-1;isNavigatingWithKeyboard=!1;documentClickHandler=null;configBundle;retryConfig;currentSection=null;sectionFilter=null;selectedSections=[];currentPathname="";constructor(r,o,l){if(this.componentId=r,this.configBundle=o,this.retryConfig=l,this.componentContainer=document.querySelector(`[data-component-id="${r}"]`),this.searchInput=document.getElementById(`search-input-${r}`),this.resultsContainer=document.getElementById(`search-results-${r}`),this.filterContainer=document.getElementById(`search-filter-${r}`),!this.componentContainer||!this.searchInput||!this.resultsContainer)throw new Error(`AlgoliaSearchComponent: Required elements not found for component ${r}`);this.filters=this.parseFilters();const g=this.componentContainer.getAttribute("data-current-path")||"";this.currentPathname=g,this.currentSection=or(g),this.searchService=new Jt(o.search,o.cache,l),this.eventEmitter=new Yt,this.stateManager=new sr({searchService:this.searchService,searchInput:this.searchInput,resultsContainer:this.resultsContainer,debounceMs:o.search.debounceMs,enableKeyboardNavigation:o.keyboard.enabled,onResultSelect:this.handleResultSelect.bind(this),onStateChange:this.handleStateChange.bind(this)}),this.init()}parseFilters(){try{const r=this.componentContainer.getAttribute("data-filters");return r?JSON.parse(r):[]}catch(r){return console.warn("Failed to parse filters from data attribute:",r),[]}}init(){this.setupEventListeners(),this.setupSearchServiceEvents(),this.setupStateManagerEvents(),this.setupKeyboardNavigation(),this.setupFocusManagement(),this.initializePersistentStructure(),this.setupSectionFilter(),this.setupCleanup(),this.stateManager.initialize()}setupEventListeners(){this.searchInput.addEventListener("input",r=>{const o=ce(r.target.value);this.handleSearchInput(o)}),this.searchInput.addEventListener("focus",()=>{ce(this.searchInput.value).trim()&&this.currentResults&&this.showCurrentResults()})}setupSearchServiceEvents(){this.searchService.addEventListener("search:start",r=>{r.query===this.currentQuery&&(this.showLoadingState(),this.updateAriaAttributes(!0))}),this.searchService.addEventListener("search:results",r=>{r.query===this.currentQuery&&r.results&&(this.currentResults=r.results,r.results.hits.length===0?this.showEmptyState():this.showResults(r.results))}),this.searchService.addEventListener("search:error",r=>{r.query===this.currentQuery&&this.showError(r.error?.message||"Search error occurred")}),this.searchService.addEventListener("search:retry",r=>{r.query===this.currentQuery&&this.showRetryState(r.retryCount||0)})}setupStateManagerEvents(){this.stateManager.addEventListener("search:results",r=>{r.results&&(this.currentResults=r.results)}),this.stateManager.addEventListener("results:show",()=>{this.updateAriaAttributes(!0)}),this.stateManager.addEventListener("results:hide",()=>{this.updateAriaAttributes(!1)})}setupKeyboardNavigation(){this.searchInput.addEventListener("keydown",r=>{this.handleKeyNavigation(r)}),this.resultsContainer.addEventListener("keydown",r=>{this.handleKeyNavigation(r)}),this.resultsContainer.addEventListener("mouseenter",()=>{this.isNavigatingWithKeyboard=!1,this.clearHighlight()})}setupSectionFilter(){this.filterContainer&&(this.sectionFilter=dr({containerId:this.filterContainer.id,selectedSections:this.selectedSections,onChange:r=>{this.selectedSections=r,this.currentQuery.trim()&&this.performSearch(this.currentQuery)}}))}initializePersistentStructure(){this.resultsContainer.innerHTML=`
      <div class="algolia-results-container">
        <div id="search-filter-${this.componentId}" class="algolia-filter-container"></div>
        <div class="algolia-results-header" style="display: none;">
          <p class="algolia-results-count">
            Found <span class="algolia-results-count-number">0</span> results
          </p>
          <button id="close-search-results" class="algolia-close-button" aria-label="Close search results">
            <svg xmlns="http://www.w3.org/2000/svg" class="algolia-close-button-icon" width="24" height="24" fill="currentColor" viewBox="0 0 24 24">
              <path fill="currentColor" d="M15 8a1 1 0 1 1 2 0 1 1 0 0 1-2 0Zm-2 2a1 1 0 1 1 2 0 1 1 0 0 1-2 0Zm-1 1a1 1 0 1 0 0 2 1 1 0 0 0 0-2Zm-3 3a1 1 0 1 1 2 0 1 1 0 0 1-2 0Zm-1 1a1 1 0 1 0 0 2 1 1 0 0 0 0-2Zm6-2a1 1 0 1 1 0 2 1 1 0 0 1 0-2Zm3 3a1 1 0 1 0-2 0 1 1 0 0 0 2 0Zm-7-7a1 1 0 1 1 0 2 1 1 0 0 1 0-2ZM9 8a1 1 0 1 0-2 0 1 1 0 0 0 2 0Z"/>
            </svg>
          </button>
        </div>
        <div class="algolia-results-content">
          <!-- Dynamic content goes here -->
        </div>
      </div>
    `,this.filterContainer=this.resultsContainer.querySelector(`#search-filter-${this.componentId}`)}setupFocusManagement(){this.resultsContainer.addEventListener("focusin",r=>{r.stopPropagation()}),this.resultsContainer.addEventListener("click",r=>{if(r.target.closest("#close-search-results")){this.hideResults();return}}),this.documentClickHandler&&document.removeEventListener("click",this.documentClickHandler,!0),this.documentClickHandler=r=>{const o=r.target;if(!this.resultsContainer.classList.contains("algolia-visible"))return;const l=this.componentContainer.contains(o),g=this.resultsContainer.contains(o),q=this.resultsContainer.querySelector(".algolia-filter-container"),m=q&&q.contains(o);l||g||m||this.hideResults()},setTimeout(()=>{this.documentClickHandler&&document.addEventListener("click",this.documentClickHandler,!0)},100)}setupCleanup(){window.addEventListener("beforeunload",()=>{this.cleanup()})}handleSearchInput(r){if(this.searchTimeout&&clearTimeout(this.searchTimeout),this.currentQuery=r,!r.trim()){this.hideResults(),this.currentResults=null;return}this.searchTimeout=setTimeout(()=>{this.performSearch(r)},this.configBundle.search.debounceMs)}async performSearch(r){try{this.eventEmitter.emit("search:start",{query:r,timestamp:Date.now()});const o=[...this.filters];if(this.selectedSections.length>0){const m=ur(this.selectedSections);m&&o.push(m)}const l=this.selectedSections.includes("guides"),g=this.currentSection?cr(this.currentSection,this.currentPathname,l):[],q=await this.searchService.search(r,o,g);r===this.currentQuery&&(this.currentResults=q,this.eventEmitter.emit("search:results",{query:r,results:q,timestamp:Date.now()}))}catch(o){if(r===this.currentQuery){console.error("Search error:",o);const l=gr(o,!0);this.eventEmitter.emit("search:error",{query:r,timestamp:Date.now(),error:l})}}}handleResultSelect(r,o){r.url&&(window.location.href=r.url)}handleStateChange(r,o,l){console.log(`Search state changed: ${r} for query: ${o}`,l)}showLoadingState(){const r=this.resultsContainer.querySelector(".algolia-results-content"),o=this.resultsContainer.querySelector(".algolia-results-header");r&&(r.innerHTML=Fe(this.configBundle.template)),o&&(o.style.display="flex"),this.resultsContainer.classList.add("algolia-visible"),this.currentHighlightIndex=-1,this.preventBodyScroll(!0)}showEmptyState(){const r=this.resultsContainer.querySelector(".algolia-results-content"),o=this.resultsContainer.querySelector(".algolia-results-header");r&&(r.innerHTML=Ke(this.configBundle.template)),o&&(o.style.display="flex"),this.resultsContainer.classList.add("algolia-visible"),this.currentHighlightIndex=-1,this.preventBodyScroll(!0)}showResults(r){const o=this.resultsContainer.querySelector(".algolia-results-content"),l=this.resultsContainer.querySelector(".algolia-results-header");if(!o)return;const g=r.hits.map((q,m)=>{const s=new DOMParser,e=We(q,m,{...mr,...this.configBundle.template},r.hits.length),t=s.parseFromString(`<div>${e}</div>`,"text/html"),a=t.querySelector(".algolia-result-item");return a&&(a.setAttribute("data-index",m.toString()),a.setAttribute("tabindex","-1"),a.setAttribute("role","option"),a.setAttribute("aria-selected","false")),t.body.innerHTML}).join("");if(o.innerHTML=`
      <div class="algolia-results-list">
        ${g}
      </div>
      ${this.configBundle.template.showPoweredBy!==!1?we():""}
    `,l){l.style.display="flex";const q=l.querySelector(".algolia-results-count-number");q&&(q.textContent=r.hits.length.toString());const m=l.querySelector(".algolia-results-count");m&&(m.innerHTML=`Found <span class="algolia-results-count-number">${r.hits.length}</span> result${r.hits.length===1?"":"s"}`)}this.filterContainer&&(this.filterContainer.style.display="block"),this.resultsContainer.classList.add("algolia-visible"),this.updateAriaAttributes(!0),this.currentHighlightIndex=-1,this.preventBodyScroll(!0)}showError(r){const o=this.resultsContainer.querySelector(".algolia-results-content"),l=this.resultsContainer.querySelector(".algolia-results-header");o&&(o.innerHTML=ue(r,this.configBundle.template)),l&&(l.style.display="flex"),this.resultsContainer.classList.add("algolia-visible"),this.currentHighlightIndex=-1,this.preventBodyScroll(!0)}showRetryState(r){const o=`Retrying search... (attempt ${r+1})`,l=this.resultsContainer.querySelector(".algolia-results-content"),g=this.resultsContainer.querySelector(".algolia-results-header");l&&(l.innerHTML=ue(o,this.configBundle.template)),g&&(g.style.display="flex"),this.resultsContainer.classList.add("algolia-visible"),this.currentHighlightIndex=-1,this.preventBodyScroll(!0)}showCurrentResults(){if(this.currentResults)switch(this.currentResults.state){case"success":{this.showResults(this.currentResults);break}case"empty":{this.showEmptyState();break}case"error":{this.showError("Search error occurred");break}case"loading":{this.showLoadingState();break}}}hideResults(){this.resultsContainer.classList.remove("algolia-visible"),this.updateAriaAttributes(!1),this.clearHighlight(),this.currentHighlightIndex=-1,this.isNavigatingWithKeyboard=!1;const r=this.resultsContainer.querySelector(".algolia-results-header");r&&(r.style.display="none");const o=this.resultsContainer.querySelector(".algolia-results-content");o&&(o.innerHTML=""),this.filterContainer&&(this.filterContainer.style.display="none"),this.preventBodyScroll(!1)}updateAriaAttributes(r){this.searchInput.setAttribute("aria-expanded",r.toString()),r?this.searchInput.setAttribute("aria-activedescendant",""):this.searchInput.removeAttribute("aria-activedescendant")}handleKeyNavigation(r){if(r.key==="Escape"){this.hideResults(),this.searchInput.focus();return}if(!this.resultsContainer.classList.contains("algolia-visible"))return;const o=this.resultsContainer.querySelectorAll(".algolia-result-item[data-index]");if(o.length!==0)switch(this.isNavigatingWithKeyboard=!0,r.key){case"ArrowDown":{r.preventDefault(),this.currentHighlightIndex=Math.min(this.currentHighlightIndex+1,o.length-1),this.highlightResult(this.currentHighlightIndex,Array.from(o));break}case"ArrowUp":{r.preventDefault(),this.currentHighlightIndex=Math.max(this.currentHighlightIndex-1,-1),this.currentHighlightIndex===-1?(this.clearHighlight(),this.searchInput.focus()):this.highlightResult(this.currentHighlightIndex,Array.from(o));break}case"Enter":{if(this.currentHighlightIndex>=0&&this.currentHighlightIndex<o.length){r.preventDefault();const g=o[this.currentHighlightIndex].querySelector("a");g&&g.click()}break}case"Tab":{this.isNavigatingWithKeyboard=!1;break}}}highlightResult(r,o){if(this.clearHighlight(),o[r]){o[r].classList.add("algolia-highlighted"),o[r].scrollIntoView({block:"nearest"}),o[r].setAttribute("aria-selected","true");const l=`search-result-${this.componentId}-${r}`;o[r].setAttribute("id",l),this.searchInput.setAttribute("aria-activedescendant",l)}}clearHighlight(){this.resultsContainer.querySelectorAll(".algolia-result-item.algolia-highlighted").forEach(o=>{o.classList.remove("algolia-highlighted"),o.setAttribute("aria-selected","false"),o.removeAttribute("id")}),this.searchInput.setAttribute("aria-activedescendant","")}preventBodyScroll(r){if(r){const o=window.scrollY;document.body.style.position="fixed",document.body.style.top=`-${o}px`,document.body.style.width="100%",document.body.setAttribute("data-scroll-lock-position",o.toString())}else{const o=parseInt(document.body.getAttribute("data-scroll-lock-position")||"0",10);document.body.style.position="",document.body.style.top="",document.body.style.width="",document.body.removeAttribute("data-scroll-lock-position"),window.scrollTo(0,o)}}cleanup(){this.searchTimeout&&clearTimeout(this.searchTimeout),this.documentClickHandler&&(document.removeEventListener("click",this.documentClickHandler,!0),this.documentClickHandler=null),this.sectionFilter&&(this.sectionFilter.destroy(),this.sectionFilter=null),this.stateManager.destroy(),this.searchService.cancelSearch(),this.currentResults=null,this.eventEmitter.clear(),this.preventBodyScroll(!1)}}const fr={maxRetries:2,baseDelay:800,maxDelay:3e3};document.addEventListener("DOMContentLoaded",()=>{document.querySelectorAll("[data-component='algolia-search']").forEach(r=>{const o=r.dataset.componentId,l=parseInt(r.dataset.maxResults||"50",10),g=parseInt(r.dataset.debounceDelay||"300",10);if(o)try{const q=je().withCredentials("CP6WGVLTLX","203b4876cab90aef90e4a58189d29cf4","astro-nutrient-website-prod").withSearch({hitsPerPage:l,debounceMs:g}).withCache({enabled:!0,maxEntries:50,defaultTTL:18e4}).withTemplate({showPoweredBy:!1}).build();new qr(o,q,fr)}catch(q){console.error(`Failed to initialize AlgoliaSearchComponent ${o}:`,q)}})});
